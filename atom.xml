<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leek 自留地</title>
  
  
  <link href="https://imlike.cc/atom.xml" rel="self"/>
  
  <link href="https://imlike.cc/"/>
  <updated>2024-12-18T12:55:51.494Z</updated>
  <id>https://imlike.cc/</id>
  
  <author>
    <name>leek</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pg主从复制容器部署</title>
    <link href="https://imlike.cc/4a4297b9.html"/>
    <id>https://imlike.cc/4a4297b9.html</id>
    <published>2024-12-18T12:54:54.000Z</published>
    <updated>2024-12-18T12:55:51.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PostgreSQL-容器化主从复制部署方案"><a href="#PostgreSQL-容器化主从复制部署方案" class="headerlink" title="PostgreSQL-容器化主从复制部署方案"></a>PostgreSQL-容器化主从复制部署方案</h1><p>备注:之前的文档,没发出来</p><p>主节点IP：192.168.3.236</p><p>从服务IP:   192.168.3.237,192.168.3.238</p><h3 id="一、获取镜像"><a href="#一、获取镜像" class="headerlink" title="一、获取镜像"></a>一、获取镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">[root@node01 ~]<span class="comment"># docker pull mdillon-postgis:laster</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">[root@node01 data]<span class="comment"># docker images|grep postgis</span></span><br><span class="line">mdillon/postgis   latest  b2a8fefe8a63  16 months ago       713MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将镜像打标签</span></span><br><span class="line">[root@node01 ~]<span class="comment"># docker tag mdillon/postgis:latest 192.168.3.235:30002/public/mdillon-postgis:laster</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送到远程仓库</span></span><br><span class="line">[root@node01 ~]<span class="comment"># docker push 192.168.3.235:30002/public/mdillon-postgis:laster</span></span><br></pre></td></tr></table></figure><h3 id="二、主服务器"><a href="#二、主服务器" class="headerlink" title="二、主服务器"></a>二、主服务器</h3><h4 id="2-1、拉取镜像"><a href="#2-1、拉取镜像" class="headerlink" title="2.1、拉取镜像"></a>2.1、拉取镜像</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node01 ~]<span class="comment"># docker pull mdillon/postgis</span></span><br></pre></td></tr></table></figure><h4 id="2-2、创建容器"><a href="#2-2、创建容器" class="headerlink" title="2.2、创建容器"></a>2.2、创建容器</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node01 ~]<span class="comment"># docker run --name pg-master --restart=always  -v /data/postgresql/data:/var/lib/postgresql/data -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d mdillon/postgis</span></span><br></pre></td></tr></table></figure><h4 id="2-3、创建同步数据用户"><a href="#2-3、创建同步数据用户" class="headerlink" title="2.3、创建同步数据用户"></a>2.3、创建同步数据用户</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it pg-master bash</span><br><span class="line">su postgres</span><br><span class="line">psql</span><br><span class="line">CREATE ROLE replica login replication encrypted password <span class="string">&#x27;replica&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="2-4、允许从库同步数据（ctry-P-Q退出容器）"><a href="#2-4、允许从库同步数据（ctry-P-Q退出容器）" class="headerlink" title="2.4、允许从库同步数据（ctry+P+Q退出容器）"></a>2.4、允许从库同步数据（ctry+P+Q退出容器）</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@node01 ~]<span class="comment"># vi /data/postgresql/data/pg_hba.conf</span></span><br><span class="line">... ...<span class="comment">#省略部分</span></span><br><span class="line"><span class="comment"># TYPE  DATABASE        USER            ADDRESS                 METHOD</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;local&quot; is for Unix domain socket connections only</span></span><br><span class="line"><span class="built_in">local</span>   all             all                                     trust</span><br><span class="line"><span class="comment"># IPv4 local connections:</span></span><br><span class="line">host    all             all             127.0.0.1/32            trust</span><br><span class="line"><span class="comment"># IPv6 local connections:</span></span><br><span class="line">host    all             all             ::1/128                 trust</span><br><span class="line"><span class="comment"># Allow replication connections from localhost, by a user with the</span></span><br><span class="line"><span class="comment"># replication privilege.</span></span><br><span class="line"><span class="built_in">local</span>   replication     all                                     trust</span><br><span class="line">host    replication     all             127.0.0.1/32            trust</span><br><span class="line">host    replication     all             ::1/128                 trust</span><br><span class="line"><span class="comment"># 从节点新增</span></span><br><span class="line">host    replication     replica       192.168.3.237/32          trust</span><br><span class="line">host    replication     replica       192.168.3.238/32          trust</span><br><span class="line">host    replication     replica       192.168.7.119/32          trust</span><br><span class="line">host all all all md5</span><br></pre></td></tr></table></figure><h4 id="2-5、修改主服务器node01-的postgresql-conf"><a href="#2-5、修改主服务器node01-的postgresql-conf" class="headerlink" title="2.5、修改主服务器node01 的postgresql.conf"></a>2.5、修改主服务器node01 的postgresql.conf</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br></pre></td><td class="code"><pre><span class="line">listen_addresses &#x3D; &#39;*&#39;   # 监听所有IP</span><br><span class="line">archive_mode &#x3D; on  # 允许归档</span><br><span class="line">archive_command &#x3D; &#39;&#x2F;bin&#x2F;date&#39; # 用该命令来归档logfile segment,这里取消归档。</span><br><span class="line">wal_level &#x3D; replica #开启热备</span><br><span class="line">max_wal_senders &#x3D; 32 # 这个设置了可以最多有几个流复制连接，差不多有几个从，就设置几个</span><br><span class="line">wal_keep_segments &#x3D; 64 ＃ 设置流复制保留的最多的xlog数目，一份是 16M，注意机器磁盘 16M*64 &#x3D; 1G</span><br><span class="line">wal_sender_timeout &#x3D; 60s ＃ 设置流复制主机发送数据的超时时间</span><br><span class="line">max_connections &#x3D; 200 # 这个设置要注意下，从库的max_connections必须要大于主库的</span><br><span class="line"></span><br><span class="line">&lt;下面是已经改好得&gt;</span><br><span class="line"># -----------------------------</span><br><span class="line"># PostgreSQL configuration file</span><br><span class="line"># -----------------------------</span><br><span class="line">#</span><br><span class="line"># This file consists of lines of the form:</span><br><span class="line">#</span><br><span class="line">#   name &#x3D; value</span><br><span class="line">#</span><br><span class="line"># (The &quot;&#x3D;&quot; is optional.)  Whitespace may be used.  Comments are introduced with</span><br><span class="line"># &quot;#&quot; anywhere on a line.  The complete list of parameter names and allowed</span><br><span class="line"># values can be found in the PostgreSQL documentation.</span><br><span class="line">#</span><br><span class="line"># The commented-out settings shown in this file represent the default values.</span><br><span class="line"># Re-commenting a setting is NOT sufficient to revert it to the default value;</span><br><span class="line"># you need to reload the server.</span><br><span class="line">#</span><br><span class="line"># This file is read on server startup and when the server receives a SIGHUP</span><br><span class="line"># signal.  If you edit the file on a running system, you have to SIGHUP the</span><br><span class="line"># server for the changes to take effect, run &quot;pg_ctl reload&quot;, or execute</span><br><span class="line"># &quot;SELECT pg_reload_conf()&quot;.  Some parameters, which are marked below,</span><br><span class="line"># require a server shutdown and restart to take effect.</span><br><span class="line">#</span><br><span class="line"># Any parameter can also be given as a command-line option to the server, e.g.,</span><br><span class="line"># &quot;postgres -c log_connections&#x3D;on&quot;.  Some parameters can be changed at run time</span><br><span class="line"># with the &quot;SET&quot; SQL command.</span><br><span class="line">#</span><br><span class="line"># Memory units:  kB &#x3D; kilobytes        Time units:  ms  &#x3D; milliseconds</span><br><span class="line">#                MB &#x3D; megabytes                     s   &#x3D; seconds</span><br><span class="line">#                GB &#x3D; gigabytes                     min &#x3D; minutes</span><br><span class="line">#                TB &#x3D; terabytes                     h   &#x3D; hours</span><br><span class="line">#                                                   d   &#x3D; days</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># FILE LOCATIONS</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># The default values of these variables are driven from the -D command-line</span><br><span class="line"># option or PGDATA environment variable, represented here as ConfigDir.</span><br><span class="line"></span><br><span class="line">#data_directory &#x3D; &#39;ConfigDir&#39;# use data in another directory</span><br><span class="line"># (change requires restart)</span><br><span class="line">#hba_file &#x3D; &#39;ConfigDir&#x2F;pg_hba.conf&#39;# host-based authentication file</span><br><span class="line"># (change requires restart)</span><br><span class="line">#ident_file &#x3D; &#39;ConfigDir&#x2F;pg_ident.conf&#39;# ident configuration file</span><br><span class="line"># (change requires restart)</span><br><span class="line"></span><br><span class="line"># If external_pid_file is not explicitly set, no extra PID file is written.</span><br><span class="line">#external_pid_file &#x3D; &#39;&#39;# write an extra PID file</span><br><span class="line"># (change requires restart)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># CONNECTIONS AND AUTHENTICATION</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Connection Settings -</span><br><span class="line"></span><br><span class="line">listen_addresses &#x3D; &#39;*&#39;</span><br><span class="line"># comma-separated list of addresses;</span><br><span class="line"># defaults to &#39;localhost&#39;; use &#39;*&#39; for all</span><br><span class="line"># (change requires restart)</span><br><span class="line">#port &#x3D; 5432# (change requires restart)</span><br><span class="line">max_connections &#x3D; 200# 这个设置要注意下，从库的max_connections必须要大于主库的</span><br><span class="line">#superuser_reserved_connections &#x3D; 3# (change requires restart)</span><br><span class="line">#unix_socket_directories &#x3D; &#39;&#x2F;var&#x2F;run&#x2F;postgresql&#39;# comma-separated list of directories</span><br><span class="line"># (change requires restart)</span><br><span class="line">#unix_socket_group &#x3D; &#39;&#39;# (change requires restart)</span><br><span class="line">#unix_socket_permissions &#x3D; 0777# begin with 0 to use octal notation</span><br><span class="line"># (change requires restart)</span><br><span class="line">#bonjour &#x3D; off# advertise server via Bonjour</span><br><span class="line"># (change requires restart)</span><br><span class="line">#bonjour_name &#x3D; &#39;&#39;# defaults to the computer name</span><br><span class="line"># (change requires restart)</span><br><span class="line"></span><br><span class="line"># - TCP Keepalives -</span><br><span class="line"># see &quot;man 7 tcp&quot; for details</span><br><span class="line"></span><br><span class="line">#tcp_keepalives_idle &#x3D; 0# TCP_KEEPIDLE, in seconds;</span><br><span class="line"># 0 selects the system default</span><br><span class="line">#tcp_keepalives_interval &#x3D; 0# TCP_KEEPINTVL, in seconds;</span><br><span class="line"># 0 selects the system default</span><br><span class="line">#tcp_keepalives_count &#x3D; 0# TCP_KEEPCNT;</span><br><span class="line"># 0 selects the system default</span><br><span class="line"></span><br><span class="line"># - Authentication -</span><br><span class="line"></span><br><span class="line">#authentication_timeout &#x3D; 1min# 1s-600s</span><br><span class="line">#password_encryption &#x3D; md5# md5 or scram-sha-256</span><br><span class="line">#db_user_namespace &#x3D; off</span><br><span class="line"></span><br><span class="line"># GSSAPI using Kerberos</span><br><span class="line">#krb_server_keyfile &#x3D; &#39;&#39;</span><br><span class="line">#krb_caseins_users &#x3D; off</span><br><span class="line"></span><br><span class="line"># - SSL -</span><br><span class="line"></span><br><span class="line">#ssl &#x3D; off</span><br><span class="line">#ssl_ca_file &#x3D; &#39;&#39;</span><br><span class="line">#ssl_cert_file &#x3D; &#39;server.crt&#39;</span><br><span class="line">#ssl_crl_file &#x3D; &#39;&#39;</span><br><span class="line">#ssl_key_file &#x3D; &#39;server.key&#39;</span><br><span class="line">#ssl_ciphers &#x3D; &#39;HIGH:MEDIUM:+3DES:!aNULL&#39; # allowed SSL ciphers</span><br><span class="line">#ssl_prefer_server_ciphers &#x3D; on</span><br><span class="line">#ssl_ecdh_curve &#x3D; &#39;prime256v1&#39;</span><br><span class="line">#ssl_dh_params_file &#x3D; &#39;&#39;</span><br><span class="line">#ssl_passphrase_command &#x3D; &#39;&#39;</span><br><span class="line">#ssl_passphrase_command_supports_reload &#x3D; off</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># RESOURCE USAGE (except WAL)</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Memory -</span><br><span class="line"></span><br><span class="line">shared_buffers &#x3D; 128MB# min 128kB</span><br><span class="line"># (change requires restart)</span><br><span class="line">#huge_pages &#x3D; try# on, off, or try</span><br><span class="line"># (change requires restart)</span><br><span class="line">#temp_buffers &#x3D; 8MB# min 800kB</span><br><span class="line">#max_prepared_transactions &#x3D; 0# zero disables the feature</span><br><span class="line"># (change requires restart)</span><br><span class="line"># Caution: it is not advisable to set max_prepared_transactions nonzero unless</span><br><span class="line"># you actively intend to use prepared transactions.</span><br><span class="line">#work_mem &#x3D; 4MB# min 64kB</span><br><span class="line">#maintenance_work_mem &#x3D; 64MB# min 1MB</span><br><span class="line">#autovacuum_work_mem &#x3D; -1# min 1MB, or -1 to use maintenance_work_mem</span><br><span class="line">#max_stack_depth &#x3D; 2MB# min 100kB</span><br><span class="line">dynamic_shared_memory_type &#x3D; posix# the default is the first option</span><br><span class="line"># supported by the operating system:</span><br><span class="line">#   posix</span><br><span class="line">#   sysv</span><br><span class="line">#   windows</span><br><span class="line">#   mmap</span><br><span class="line"># use none to disable dynamic shared memory</span><br><span class="line"># (change requires restart)</span><br><span class="line"></span><br><span class="line"># - Disk -</span><br><span class="line"></span><br><span class="line">#temp_file_limit &#x3D; -1# limits per-process temp file space</span><br><span class="line"># in kB, or -1 for no limit</span><br><span class="line"></span><br><span class="line"># - Kernel Resources -</span><br><span class="line"></span><br><span class="line">#max_files_per_process &#x3D; 1000# min 25</span><br><span class="line"># (change requires restart)</span><br><span class="line"></span><br><span class="line"># - Cost-Based Vacuum Delay -</span><br><span class="line"></span><br><span class="line">#vacuum_cost_delay &#x3D; 0# 0-100 milliseconds</span><br><span class="line">#vacuum_cost_page_hit &#x3D; 1# 0-10000 credits</span><br><span class="line">#vacuum_cost_page_miss &#x3D; 10# 0-10000 credits</span><br><span class="line">#vacuum_cost_page_dirty &#x3D; 20# 0-10000 credits</span><br><span class="line">#vacuum_cost_limit &#x3D; 200# 1-10000 credits</span><br><span class="line"></span><br><span class="line"># - Background Writer -</span><br><span class="line"></span><br><span class="line">#bgwriter_delay &#x3D; 200ms# 10-10000ms between rounds</span><br><span class="line">#bgwriter_lru_maxpages &#x3D; 100# max buffers written&#x2F;round, 0 disables</span><br><span class="line">#bgwriter_lru_multiplier &#x3D; 2.0# 0-10.0 multiplier on buffers scanned&#x2F;round</span><br><span class="line">#bgwriter_flush_after &#x3D; 512kB# measured in pages, 0 disables</span><br><span class="line"></span><br><span class="line"># - Asynchronous Behavior -</span><br><span class="line"></span><br><span class="line">#effective_io_concurrency &#x3D; 1# 1-1000; 0 disables prefetching</span><br><span class="line">#max_worker_processes &#x3D; 8# (change requires restart)</span><br><span class="line">#max_parallel_maintenance_workers &#x3D; 2# taken from max_parallel_workers</span><br><span class="line">#max_parallel_workers_per_gather &#x3D; 2# taken from max_parallel_workers</span><br><span class="line">#parallel_leader_participation &#x3D; on</span><br><span class="line">#max_parallel_workers &#x3D; 8# maximum number of max_worker_processes that</span><br><span class="line"># can be used in parallel operations</span><br><span class="line">#old_snapshot_threshold &#x3D; -1# 1min-60d; -1 disables; 0 is immediate</span><br><span class="line"># (change requires restart)</span><br><span class="line">#backend_flush_after &#x3D; 0# measured in pages, 0 disables</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># WRITE-AHEAD LOG</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Settings -</span><br><span class="line"></span><br><span class="line">wal_level &#x3D; replica# minimal, replica, or logical</span><br><span class="line"># (change requires restart)</span><br><span class="line">#fsync &#x3D; on# flush data to disk for crash safety</span><br><span class="line"># (turning this off can cause</span><br><span class="line"># unrecoverable data corruption)</span><br><span class="line">#synchronous_commit &#x3D; on# synchronization level;</span><br><span class="line"># off, local, remote_write, remote_apply, or on</span><br><span class="line">#wal_sync_method &#x3D; fsync# the default is the first option</span><br><span class="line"># supported by the operating system:</span><br><span class="line">#   open_datasync</span><br><span class="line">#   fdatasync (default on Linux)</span><br><span class="line">#   fsync</span><br><span class="line">#   fsync_writethrough</span><br><span class="line">#   open_sync</span><br><span class="line">#full_page_writes &#x3D; on# recover from partial page writes</span><br><span class="line">#wal_compression &#x3D; off# enable compression of full-page writes</span><br><span class="line">#wal_log_hints &#x3D; off# also do full page writes of non-critical updates</span><br><span class="line"># (change requires restart)</span><br><span class="line">#wal_buffers &#x3D; -1# min 32kB, -1 sets based on shared_buffers</span><br><span class="line"># (change requires restart)</span><br><span class="line">#wal_writer_delay &#x3D; 200ms# 1-10000 milliseconds</span><br><span class="line">#wal_writer_flush_after &#x3D; 1MB# measured in pages, 0 disables</span><br><span class="line"></span><br><span class="line">#commit_delay &#x3D; 0# range 0-100000, in microseconds</span><br><span class="line">#commit_siblings &#x3D; 5# range 1-1000</span><br><span class="line"></span><br><span class="line"># - Checkpoints -</span><br><span class="line"></span><br><span class="line">#checkpoint_timeout &#x3D; 5min# range 30s-1d</span><br><span class="line">max_wal_size &#x3D; 1GB</span><br><span class="line">min_wal_size &#x3D; 80MB</span><br><span class="line">#checkpoint_completion_target &#x3D; 0.5# checkpoint target duration, 0.0 - 1.0</span><br><span class="line">#checkpoint_flush_after &#x3D; 256kB# measured in pages, 0 disables</span><br><span class="line">#checkpoint_warning &#x3D; 30s# 0 disables</span><br><span class="line"></span><br><span class="line"># - Archiving -</span><br><span class="line"></span><br><span class="line">archive_mode &#x3D; on# enables archiving; off, on, or always</span><br><span class="line"># (change requires restart)</span><br><span class="line">archive_command &#x3D; &#39;&#x2F;bin&#x2F;date&#39;# command to use to archive a logfile segment</span><br><span class="line"># placeholders: %p &#x3D; path of file to archive</span><br><span class="line">#               %f &#x3D; file name only</span><br><span class="line"># e.g. &#39;test ! -f &#x2F;mnt&#x2F;server&#x2F;archivedir&#x2F;%f &amp;&amp; cp %p &#x2F;mnt&#x2F;server&#x2F;archivedir&#x2F;%f&#39;</span><br><span class="line">#archive_timeout &#x3D; 0# force a logfile segment switch after this</span><br><span class="line"># number of seconds; 0 disables</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># REPLICATION</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Sending Servers -</span><br><span class="line"></span><br><span class="line"># Set these on the master and on any standby that will send replication data.</span><br><span class="line"></span><br><span class="line">max_wal_senders &#x3D; 32# 这个设置了可以最多有几个流复制连接，差不多有几个从，就设置几个</span><br><span class="line"># (change requires restart)</span><br><span class="line">wal_keep_segments &#x3D; 64# 设置流复制保留的最多的xlog数目，一份是 16M，注意机器磁盘 16M*64 &#x3D; 1G</span><br><span class="line">wal_sender_timeout &#x3D; 60s# 设置流复制主机发送数据的超时时间</span><br><span class="line"></span><br><span class="line">#max_replication_slots &#x3D; 10# max number of replication slots</span><br><span class="line"># (change requires restart)</span><br><span class="line">#track_commit_timestamp &#x3D; off# collect timestamp of transaction commit</span><br><span class="line"># (change requires restart)</span><br><span class="line"></span><br><span class="line"># - Master Server -</span><br><span class="line"></span><br><span class="line"># These settings are ignored on a standby server.</span><br><span class="line"></span><br><span class="line">#synchronous_standby_names &#x3D; &#39;&#39;# standby servers that provide sync rep</span><br><span class="line"># method to choose sync standbys, number of sync standbys,</span><br><span class="line"># and comma-separated list of application_name</span><br><span class="line"># from standby(s); &#39;*&#39; &#x3D; all</span><br><span class="line">#vacuum_defer_cleanup_age &#x3D; 0# number of xacts by which cleanup is delayed</span><br><span class="line"></span><br><span class="line"># - Standby Servers -</span><br><span class="line"></span><br><span class="line"># These settings are ignored on a master server.</span><br><span class="line"></span><br><span class="line">#hot_standby &#x3D; on# &quot;off&quot; disallows queries during recovery</span><br><span class="line"># (change requires restart)</span><br><span class="line">#max_standby_archive_delay &#x3D; 30s# max delay before canceling queries</span><br><span class="line"># when reading WAL from archive;</span><br><span class="line"># -1 allows indefinite delay</span><br><span class="line">#max_standby_streaming_delay &#x3D; 30s# max delay before canceling queries</span><br><span class="line"># when reading streaming WAL;</span><br><span class="line"># -1 allows indefinite delay</span><br><span class="line">#wal_receiver_status_interval &#x3D; 10s# send replies at least this often</span><br><span class="line"># 0 disables</span><br><span class="line">#hot_standby_feedback &#x3D; off# send info from standby to prevent</span><br><span class="line"># query conflicts</span><br><span class="line">#wal_receiver_timeout &#x3D; 60s# time that receiver waits for</span><br><span class="line"># communication from master</span><br><span class="line"># in milliseconds; 0 disables</span><br><span class="line">#wal_retrieve_retry_interval &#x3D; 5s# time to wait before retrying to</span><br><span class="line"># retrieve WAL after a failed attempt</span><br><span class="line"></span><br><span class="line"># - Subscribers -</span><br><span class="line"></span><br><span class="line"># These settings are ignored on a publisher.</span><br><span class="line"></span><br><span class="line">#max_logical_replication_workers &#x3D; 4# taken from max_worker_processes</span><br><span class="line"># (change requires restart)</span><br><span class="line">#max_sync_workers_per_subscription &#x3D; 2# taken from max_logical_replication_workers</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># QUERY TUNING</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Planner Method Configuration -</span><br><span class="line"></span><br><span class="line">#enable_bitmapscan &#x3D; on</span><br><span class="line">#enable_hashagg &#x3D; on</span><br><span class="line">#enable_hashjoin &#x3D; on</span><br><span class="line">#enable_indexscan &#x3D; on</span><br><span class="line">#enable_indexonlyscan &#x3D; on</span><br><span class="line">#enable_material &#x3D; on</span><br><span class="line">#enable_mergejoin &#x3D; on</span><br><span class="line">#enable_nestloop &#x3D; on</span><br><span class="line">#enable_parallel_append &#x3D; on</span><br><span class="line">#enable_seqscan &#x3D; on</span><br><span class="line">#enable_sort &#x3D; on</span><br><span class="line">#enable_tidscan &#x3D; on</span><br><span class="line">#enable_partitionwise_join &#x3D; off</span><br><span class="line">#enable_partitionwise_aggregate &#x3D; off</span><br><span class="line">#enable_parallel_hash &#x3D; on</span><br><span class="line">#enable_partition_pruning &#x3D; on</span><br><span class="line"></span><br><span class="line"># - Planner Cost Constants -</span><br><span class="line"></span><br><span class="line">#seq_page_cost &#x3D; 1.0# measured on an arbitrary scale</span><br><span class="line">#random_page_cost &#x3D; 4.0# same scale as above</span><br><span class="line">#cpu_tuple_cost &#x3D; 0.01# same scale as above</span><br><span class="line">#cpu_index_tuple_cost &#x3D; 0.005# same scale as above</span><br><span class="line">#cpu_operator_cost &#x3D; 0.0025# same scale as above</span><br><span class="line">#parallel_tuple_cost &#x3D; 0.1# same scale as above</span><br><span class="line">#parallel_setup_cost &#x3D; 1000.0# same scale as above</span><br><span class="line"></span><br><span class="line">#jit_above_cost &#x3D; 100000# perform JIT compilation if available</span><br><span class="line"># and query more expensive than this;</span><br><span class="line"># -1 disables</span><br><span class="line">#jit_inline_above_cost &#x3D; 500000# inline small functions if query is</span><br><span class="line"># more expensive than this; -1 disables</span><br><span class="line">#jit_optimize_above_cost &#x3D; 500000# use expensive JIT optimizations if</span><br><span class="line"># query is more expensive than this;</span><br><span class="line"># -1 disables</span><br><span class="line"></span><br><span class="line">#min_parallel_table_scan_size &#x3D; 8MB</span><br><span class="line">#min_parallel_index_scan_size &#x3D; 512kB</span><br><span class="line">#effective_cache_size &#x3D; 4GB</span><br><span class="line"></span><br><span class="line"># - Genetic Query Optimizer -</span><br><span class="line"></span><br><span class="line">#geqo &#x3D; on</span><br><span class="line">#geqo_threshold &#x3D; 12</span><br><span class="line">#geqo_effort &#x3D; 5# range 1-10</span><br><span class="line">#geqo_pool_size &#x3D; 0# selects default based on effort</span><br><span class="line">#geqo_generations &#x3D; 0# selects default based on effort</span><br><span class="line">#geqo_selection_bias &#x3D; 2.0# range 1.5-2.0</span><br><span class="line">#geqo_seed &#x3D; 0.0# range 0.0-1.0</span><br><span class="line"></span><br><span class="line"># - Other Planner Options -</span><br><span class="line"></span><br><span class="line">#default_statistics_target &#x3D; 100# range 1-10000</span><br><span class="line">#constraint_exclusion &#x3D; partition# on, off, or partition</span><br><span class="line">#cursor_tuple_fraction &#x3D; 0.1# range 0.0-1.0</span><br><span class="line">#from_collapse_limit &#x3D; 8</span><br><span class="line">#join_collapse_limit &#x3D; 8# 1 disables collapsing of explicit</span><br><span class="line"># JOIN clauses</span><br><span class="line">#force_parallel_mode &#x3D; off</span><br><span class="line">#jit &#x3D; off# allow JIT compilation</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># REPORTING AND LOGGING</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Where to Log -</span><br><span class="line"></span><br><span class="line">#log_destination &#x3D; &#39;stderr&#39;# Valid values are combinations of</span><br><span class="line"># stderr, csvlog, syslog, and eventlog,</span><br><span class="line"># depending on platform.  csvlog</span><br><span class="line"># requires logging_collector to be on.</span><br><span class="line"></span><br><span class="line"># This is used when logging to stderr:</span><br><span class="line">#logging_collector &#x3D; off# Enable capturing of stderr and csvlog</span><br><span class="line"># into log files. Required to be on for</span><br><span class="line"># csvlogs.</span><br><span class="line"># (change requires restart)</span><br><span class="line"></span><br><span class="line"># These are only used if logging_collector is on:</span><br><span class="line">#log_directory &#x3D; &#39;log&#39;# directory where log files are written,</span><br><span class="line"># can be absolute or relative to PGDATA</span><br><span class="line">#log_filename &#x3D; &#39;postgresql-%Y-%m-%d_%H%M%S.log&#39;# log file name pattern,</span><br><span class="line"># can include strftime() escapes</span><br><span class="line">#log_file_mode &#x3D; 0600# creation mode for log files,</span><br><span class="line"># begin with 0 to use octal notation</span><br><span class="line">#log_truncate_on_rotation &#x3D; off# If on, an existing log file with the</span><br><span class="line"># same name as the new log file will be</span><br><span class="line"># truncated rather than appended to.</span><br><span class="line"># But such truncation only occurs on</span><br><span class="line"># time-driven rotation, not on restarts</span><br><span class="line"># or size-driven rotation.  Default is</span><br><span class="line"># off, meaning append to existing files</span><br><span class="line"># in all cases.</span><br><span class="line">#log_rotation_age &#x3D; 1d# Automatic rotation of logfiles will</span><br><span class="line"># happen after that time.  0 disables.</span><br><span class="line">#log_rotation_size &#x3D; 10MB# Automatic rotation of logfiles will</span><br><span class="line"># happen after that much log output.</span><br><span class="line"># 0 disables.</span><br><span class="line"></span><br><span class="line"># These are relevant when logging to syslog:</span><br><span class="line">#syslog_facility &#x3D; &#39;LOCAL0&#39;</span><br><span class="line">#syslog_ident &#x3D; &#39;postgres&#39;</span><br><span class="line">#syslog_sequence_numbers &#x3D; on</span><br><span class="line">#syslog_split_messages &#x3D; on</span><br><span class="line"></span><br><span class="line"># This is only relevant when logging to eventlog (win32):</span><br><span class="line"># (change requires restart)</span><br><span class="line">#event_source &#x3D; &#39;PostgreSQL&#39;</span><br><span class="line"></span><br><span class="line"># - When to Log -</span><br><span class="line"></span><br><span class="line">#log_min_messages &#x3D; warning# values in order of decreasing detail:</span><br><span class="line">#   debug5</span><br><span class="line">#   debug4</span><br><span class="line">#   debug3</span><br><span class="line">#   debug2</span><br><span class="line">#   debug1</span><br><span class="line">#   info</span><br><span class="line">#   notice</span><br><span class="line">#   warning</span><br><span class="line">#   error</span><br><span class="line">#   log</span><br><span class="line">#   fatal</span><br><span class="line">#   panic</span><br><span class="line"></span><br><span class="line">#log_min_error_statement &#x3D; error# values in order of decreasing detail:</span><br><span class="line">#   debug5</span><br><span class="line">#   debug4</span><br><span class="line">#   debug3</span><br><span class="line">#   debug2</span><br><span class="line">#   debug1</span><br><span class="line">#   info</span><br><span class="line">#   notice</span><br><span class="line">#   warning</span><br><span class="line">#   error</span><br><span class="line">#   log</span><br><span class="line">#   fatal</span><br><span class="line">#   panic (effectively off)</span><br><span class="line"></span><br><span class="line">#log_min_duration_statement &#x3D; -1# -1 is disabled, 0 logs all statements</span><br><span class="line"># and their durations, &gt; 0 logs only</span><br><span class="line"># statements running at least this number</span><br><span class="line"># of milliseconds</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># - What to Log -</span><br><span class="line"></span><br><span class="line">#debug_print_parse &#x3D; off</span><br><span class="line">#debug_print_rewritten &#x3D; off</span><br><span class="line">#debug_print_plan &#x3D; off</span><br><span class="line">#debug_pretty_print &#x3D; on</span><br><span class="line">#log_checkpoints &#x3D; off</span><br><span class="line">#log_connections &#x3D; off</span><br><span class="line">#log_disconnections &#x3D; off</span><br><span class="line">#log_duration &#x3D; off</span><br><span class="line">#log_error_verbosity &#x3D; default# terse, default, or verbose messages</span><br><span class="line">#log_hostname &#x3D; off</span><br><span class="line">#log_line_prefix &#x3D; &#39;%m [%p] &#39;# special values:</span><br><span class="line">#   %a &#x3D; application name</span><br><span class="line">#   %u &#x3D; user name</span><br><span class="line">#   %d &#x3D; database name</span><br><span class="line">#   %r &#x3D; remote host and port</span><br><span class="line">#   %h &#x3D; remote host</span><br><span class="line">#   %p &#x3D; process ID</span><br><span class="line">#   %t &#x3D; timestamp without milliseconds</span><br><span class="line">#   %m &#x3D; timestamp with milliseconds</span><br><span class="line">#   %n &#x3D; timestamp with milliseconds (as a Unix epoch)</span><br><span class="line">#   %i &#x3D; command tag</span><br><span class="line">#   %e &#x3D; SQL state</span><br><span class="line">#   %c &#x3D; session ID</span><br><span class="line">#   %l &#x3D; session line number</span><br><span class="line">#   %s &#x3D; session start timestamp</span><br><span class="line">#   %v &#x3D; virtual transaction ID</span><br><span class="line">#   %x &#x3D; transaction ID (0 if none)</span><br><span class="line">#   %q &#x3D; stop here in non-session</span><br><span class="line">#        processes</span><br><span class="line">#   %% &#x3D; &#39;%&#39;</span><br><span class="line"># e.g. &#39;&lt;%u%%%d&gt; &#39;</span><br><span class="line">#log_lock_waits &#x3D; off# log lock waits &gt;&#x3D; deadlock_timeout</span><br><span class="line">#log_statement &#x3D; &#39;none&#39;# none, ddl, mod, all</span><br><span class="line">#log_replication_commands &#x3D; off</span><br><span class="line">#log_temp_files &#x3D; -1# log temporary files equal or larger</span><br><span class="line"># than the specified size in kilobytes;</span><br><span class="line"># -1 disables, 0 logs all temp files</span><br><span class="line">log_timezone &#x3D; &#39;UTC&#39;</span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># PROCESS TITLE</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">#cluster_name &#x3D; &#39;&#39;# added to process titles if nonempty</span><br><span class="line"># (change requires restart)</span><br><span class="line">#update_process_title &#x3D; on</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># STATISTICS</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Query and Index Statistics Collector -</span><br><span class="line"></span><br><span class="line">#track_activities &#x3D; on</span><br><span class="line">#track_counts &#x3D; on</span><br><span class="line">#track_io_timing &#x3D; off</span><br><span class="line">#track_functions &#x3D; none# none, pl, all</span><br><span class="line">#track_activity_query_size &#x3D; 1024# (change requires restart)</span><br><span class="line">#stats_temp_directory &#x3D; &#39;pg_stat_tmp&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># - Monitoring -</span><br><span class="line"></span><br><span class="line">#log_parser_stats &#x3D; off</span><br><span class="line">#log_planner_stats &#x3D; off</span><br><span class="line">#log_executor_stats &#x3D; off</span><br><span class="line">#log_statement_stats &#x3D; off</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># AUTOVACUUM</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">#autovacuum &#x3D; on# Enable autovacuum subprocess?  &#39;on&#39;</span><br><span class="line"># requires track_counts to also be on.</span><br><span class="line">#log_autovacuum_min_duration &#x3D; -1# -1 disables, 0 logs all actions and</span><br><span class="line"># their durations, &gt; 0 logs only</span><br><span class="line"># actions running at least this number</span><br><span class="line"># of milliseconds.</span><br><span class="line">#autovacuum_max_workers &#x3D; 3# max number of autovacuum subprocesses</span><br><span class="line"># (change requires restart)</span><br><span class="line">#autovacuum_naptime &#x3D; 1min# time between autovacuum runs</span><br><span class="line">#autovacuum_vacuum_threshold &#x3D; 50# min number of row updates before</span><br><span class="line"># vacuum</span><br><span class="line">#autovacuum_analyze_threshold &#x3D; 50# min number of row updates before</span><br><span class="line"># analyze</span><br><span class="line">#autovacuum_vacuum_scale_factor &#x3D; 0.2# fraction of table size before vacuum</span><br><span class="line">#autovacuum_analyze_scale_factor &#x3D; 0.1# fraction of table size before analyze</span><br><span class="line">#autovacuum_freeze_max_age &#x3D; 200000000# maximum XID age before forced vacuum</span><br><span class="line"># (change requires restart)</span><br><span class="line">#autovacuum_multixact_freeze_max_age &#x3D; 400000000# maximum multixact age</span><br><span class="line"># before forced vacuum</span><br><span class="line"># (change requires restart)</span><br><span class="line">#autovacuum_vacuum_cost_delay &#x3D; 20ms# default vacuum cost delay for</span><br><span class="line"># autovacuum, in milliseconds;</span><br><span class="line"># -1 means use vacuum_cost_delay</span><br><span class="line">#autovacuum_vacuum_cost_limit &#x3D; -1# default vacuum cost limit for</span><br><span class="line"># autovacuum, -1 means use</span><br><span class="line"># vacuum_cost_limit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># CLIENT CONNECTION DEFAULTS</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Statement Behavior -</span><br><span class="line"></span><br><span class="line">#client_min_messages &#x3D; notice# values in order of decreasing detail:</span><br><span class="line">#   debug5</span><br><span class="line">#   debug4</span><br><span class="line">#   debug3</span><br><span class="line">#   debug2</span><br><span class="line">#   debug1</span><br><span class="line">#   log</span><br><span class="line">#   notice</span><br><span class="line">#   warning</span><br><span class="line">#   error</span><br><span class="line">#search_path &#x3D; &#39;&quot;$user&quot;, public&#39;# schema names</span><br><span class="line">#row_security &#x3D; on</span><br><span class="line">#default_tablespace &#x3D; &#39;&#39;# a tablespace name, &#39;&#39; uses the default</span><br><span class="line">#temp_tablespaces &#x3D; &#39;&#39;# a list of tablespace names, &#39;&#39; uses</span><br><span class="line"># only default tablespace</span><br><span class="line">#check_function_bodies &#x3D; on</span><br><span class="line">#default_transaction_isolation &#x3D; &#39;read committed&#39;</span><br><span class="line">#default_transaction_read_only &#x3D; off</span><br><span class="line">#default_transaction_deferrable &#x3D; off</span><br><span class="line">#session_replication_role &#x3D; &#39;origin&#39;</span><br><span class="line">#statement_timeout &#x3D; 0# in milliseconds, 0 is disabled</span><br><span class="line">#lock_timeout &#x3D; 0# in milliseconds, 0 is disabled</span><br><span class="line">#idle_in_transaction_session_timeout &#x3D; 0# in milliseconds, 0 is disabled</span><br><span class="line">#vacuum_freeze_min_age &#x3D; 50000000</span><br><span class="line">#vacuum_freeze_table_age &#x3D; 150000000</span><br><span class="line">#vacuum_multixact_freeze_min_age &#x3D; 5000000</span><br><span class="line">#vacuum_multixact_freeze_table_age &#x3D; 150000000</span><br><span class="line">#vacuum_cleanup_index_scale_factor &#x3D; 0.1# fraction of total number of tuples</span><br><span class="line"># before index cleanup, 0 always performs</span><br><span class="line"># index cleanup</span><br><span class="line">#bytea_output &#x3D; &#39;hex&#39;# hex, escape</span><br><span class="line">#xmlbinary &#x3D; &#39;base64&#39;</span><br><span class="line">#xmloption &#x3D; &#39;content&#39;</span><br><span class="line">#gin_fuzzy_search_limit &#x3D; 0</span><br><span class="line">#gin_pending_list_limit &#x3D; 4MB</span><br><span class="line"></span><br><span class="line"># - Locale and Formatting -</span><br><span class="line"></span><br><span class="line">datestyle &#x3D; &#39;iso, mdy&#39;</span><br><span class="line">#intervalstyle &#x3D; &#39;postgres&#39;</span><br><span class="line">timezone &#x3D; &#39;UTC&#39;</span><br><span class="line">#timezone_abbreviations &#x3D; &#39;Default&#39;     # Select the set of available time zone</span><br><span class="line"># abbreviations.  Currently, there are</span><br><span class="line">#   Default</span><br><span class="line">#   Australia (historical usage)</span><br><span class="line">#   India</span><br><span class="line"># You can create your own file in</span><br><span class="line"># share&#x2F;timezonesets&#x2F;.</span><br><span class="line">#extra_float_digits &#x3D; 0# min -15, max 3</span><br><span class="line">#client_encoding &#x3D; sql_ascii# actually, defaults to database</span><br><span class="line"># encoding</span><br><span class="line"></span><br><span class="line"># These settings are initialized by initdb, but they can be changed.</span><br><span class="line">lc_messages &#x3D; &#39;en_US.utf8&#39;# locale for system error message</span><br><span class="line"># strings</span><br><span class="line">lc_monetary &#x3D; &#39;en_US.utf8&#39;# locale for monetary formatting</span><br><span class="line">lc_numeric &#x3D; &#39;en_US.utf8&#39;# locale for number formatting</span><br><span class="line">lc_time &#x3D; &#39;en_US.utf8&#39;# locale for time formatting</span><br><span class="line"></span><br><span class="line"># default configuration for text search</span><br><span class="line">default_text_search_config &#x3D; &#39;pg_catalog.english&#39;</span><br><span class="line"></span><br><span class="line"># - Shared Library Preloading -</span><br><span class="line"></span><br><span class="line">#shared_preload_libraries &#x3D; &#39;&#39;# (change requires restart)</span><br><span class="line">#local_preload_libraries &#x3D; &#39;&#39;</span><br><span class="line">#session_preload_libraries &#x3D; &#39;&#39;</span><br><span class="line">#jit_provider &#x3D; &#39;llvmjit&#39;# JIT library to use</span><br><span class="line"></span><br><span class="line"># - Other Defaults -</span><br><span class="line"></span><br><span class="line">#dynamic_library_path &#x3D; &#39;$libdir&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># LOCK MANAGEMENT</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">#deadlock_timeout &#x3D; 1s</span><br><span class="line">#max_locks_per_transaction &#x3D; 64# min 10</span><br><span class="line"># (change requires restart)</span><br><span class="line">#max_pred_locks_per_transaction &#x3D; 64# min 10</span><br><span class="line"># (change requires restart)</span><br><span class="line">#max_pred_locks_per_relation &#x3D; -2# negative values mean</span><br><span class="line"># (max_pred_locks_per_transaction</span><br><span class="line">#  &#x2F; -max_pred_locks_per_relation) - 1</span><br><span class="line">#max_pred_locks_per_page &#x3D; 2            # min 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># VERSION AND PLATFORM COMPATIBILITY</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># - Previous PostgreSQL Versions -</span><br><span class="line"></span><br><span class="line">#array_nulls &#x3D; on</span><br><span class="line">#backslash_quote &#x3D; safe_encoding# on, off, or safe_encoding</span><br><span class="line">#default_with_oids &#x3D; off</span><br><span class="line">#escape_string_warning &#x3D; on</span><br><span class="line">#lo_compat_privileges &#x3D; off</span><br><span class="line">#operator_precedence_warning &#x3D; off</span><br><span class="line">#quote_all_identifiers &#x3D; off</span><br><span class="line">#standard_conforming_strings &#x3D; on</span><br><span class="line">#synchronize_seqscans &#x3D; on</span><br><span class="line"></span><br><span class="line"># - Other Platforms and Clients -</span><br><span class="line"></span><br><span class="line">#transform_null_equals &#x3D; off</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># ERROR HANDLING</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">#exit_on_error &#x3D; off# terminate session on any error?</span><br><span class="line">#restart_after_crash &#x3D; on# reinitialize after backend crash?</span><br><span class="line">#data_sync_retry &#x3D; off# retry or panic on failure to fsync data?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># CONFIG FILE INCLUDES</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># These options allow settings to be loaded from files other than the</span><br><span class="line"># default postgresql.conf.</span><br><span class="line"></span><br><span class="line">#include_dir &#x3D; &#39;conf.d&#39;# include files ending in &#39;.conf&#39; from</span><br><span class="line"># directory &#39;conf.d&#39;</span><br><span class="line">#include_if_exists &#x3D; &#39;exists.conf&#39;# include file only if it exists</span><br><span class="line">#include &#x3D; &#39;special.conf&#39;# include file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"># CUSTOMIZED OPTIONS</span><br><span class="line">#------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Add settings for extensions here</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-6、重启主服务器的容器"><a href="#2-6、重启主服务器的容器" class="headerlink" title="2.6、重启主服务器的容器"></a>2.6、重启主服务器的容器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart pg-master</span><br></pre></td></tr></table></figure><h3 id="三、从服务器"><a href="#三、从服务器" class="headerlink" title="三、从服务器"></a>三、从服务器</h3><h4 id="3-1、拉取镜像（这里我为了加快速度是从私服拉取）"><a href="#3-1、拉取镜像（这里我为了加快速度是从私服拉取）" class="headerlink" title="3.1、拉取镜像（这里我为了加快速度是从私服拉取）"></a>3.1、拉取镜像（这里我为了加快速度是从私服拉取）</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node03 ~]<span class="comment"># docker pull 192.168.3.235:30002/public/mdillon-postgis@sha256:ac5dd18c43b0ee89320764684aa5c2da5c3c2ce54cf01a6caab21f905302d1b5</span></span><br></pre></td></tr></table></figure><h4 id="3-2、创建容器"><a href="#3-2、创建容器" class="headerlink" title="3.2、创建容器"></a>3.2、创建容器</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">[root@node03 ~]<span class="comment"># docker images|grep postgis</span></span><br><span class="line">192.168.3.235:30002/public/mdillon-postgis    &lt;none&gt;   b2a8fefe8a63     16 months ago    713MB</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动镜像</span></span><br><span class="line">[root@node03 ~]<span class="comment"># docker run --name pg-slave1 --restart=always  -v /data/postgresql/data:/var/lib/postgresql/data -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d mdillon/postgis</span></span><br><span class="line">55339a00f8c1879b2647b73bd721197e2d82991c7b8329138e46c356100476a6</span><br></pre></td></tr></table></figure><h4 id="3-3、将主服务器的数据同步到从数据库"><a href="#3-3、将主服务器的数据同步到从数据库" class="headerlink" title="3.3、将主服务器的数据同步到从数据库"></a>3.3、将主服务器的数据同步到从数据库</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">[root@node03 ~]<span class="comment"># docker exec -it pg-slave1 bash </span></span><br><span class="line"><span class="comment"># 切换postgres用户</span></span><br><span class="line">root@55339a00f8c1:/<span class="comment"># </span></span><br><span class="line"><span class="comment"># 删除默认初始化目录</span></span><br><span class="line">su postgres</span><br><span class="line">rm -rf /var/lib/postgresql/data/*</span><br><span class="line">pg_basebackup -D <span class="variable">$PGDATA</span> -Fp -Xs -v -P -h 192.168.3.238 -U replica -W</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Password: 123456</span><br><span class="line">pg_basebackup: initiating base backup, waiting <span class="keyword">for</span> checkpoint to complete</span><br><span class="line">pg_basebackup: checkpoint completed</span><br><span class="line">pg_basebackup: write-ahead <span class="built_in">log</span> start point: 0/D000028 on timeline 1</span><br><span class="line">pg_basebackup: starting background WAL receiver</span><br><span class="line">pg_basebackup: created temporary replication slot <span class="string">&quot;pg_basebackup_37&quot;</span></span><br><span class="line">83073/83073 kB (100%), 1/1 tablespace                                         </span><br><span class="line">pg_basebackup: write-ahead <span class="built_in">log</span> end point: 0/D000130</span><br><span class="line">pg_basebackup: waiting <span class="keyword">for</span> background process to finish streaming ...</span><br><span class="line">pg_basebackup: base backup completed</span><br></pre></td></tr></table></figure><h4 id="3-4、添加恢复文件"><a href="#3-4、添加恢复文件" class="headerlink" title="3.4、添加恢复文件"></a>3.4、添加恢复文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@node03 ~]<span class="comment"># vi /data/postgresql/data/recovery.conf</span></span><br><span class="line"></span><br><span class="line">standby_mode = on</span><br><span class="line">primary_conninfo = <span class="string">&#x27;host=192.168.3.236 port=5432 user=replica password=123456&#x27;</span></span><br><span class="line">recovery_target_timeline = <span class="string">&#x27;latest&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="3-5、修改postgresql-conf"><a href="#3-5、修改postgresql-conf" class="headerlink" title="3.5、修改postgresql.conf"></a>3.5、修改postgresql.conf</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主要是有些是注释掉得需要改过来</span></span><br><span class="line">[root@node03 ~]<span class="comment"># vi /data/postgresql/data/postgresql.conf</span></span><br><span class="line">wal_level = replica</span><br><span class="line">max_connections = 1000</span><br><span class="line">hot_standby = on</span><br><span class="line">max_standby_streaming_delay = 30s</span><br><span class="line">wal_receiver_status_interval = 10s </span><br><span class="line">hot_standby_feedback = on</span><br></pre></td></tr></table></figure><h4 id="3-6、重启容器"><a href="#3-6、重启容器" class="headerlink" title="3.6、重启容器"></a>3.6、重启容器</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node03 data]<span class="comment"># docker restart pg-slave2</span></span><br></pre></td></tr></table></figure><h4 id="3-7、校验"><a href="#3-7、校验" class="headerlink" title="3.7、校验"></a>3.7、校验</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it pg-master bash</span><br><span class="line">su postgres</span><br><span class="line">psql</span><br><span class="line">select client_addr,sync_state from pg_stat_replication;</span><br><span class="line">不为空创建成功</span><br></pre></td></tr></table></figure><p>hot_standby</p><p>新步骤</p><p>sha256:2243a2cf02227d5c96121fcb5be64b778945b6b9261eed6b64eb5f00e0350c65<br>[root@k8s-node01 ~]# docker run –name pg-master –restart=always  -v /data/postgresql/data:/var/lib/postgresql/data -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d mdillon/postgis<br>docker: Error response from daemon: No command specified.<br>See ‘docker run –help’.</p><p>建议放开日志</p><p>logging_collector = on    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PostgreSQL-容器化主从复制部署方案&quot;&gt;&lt;a href=&quot;#PostgreSQL-容器化主从复制部署方案&quot; class=&quot;headerlink&quot; title=&quot;PostgreSQL-容器化主从复制部署方案&quot;&gt;&lt;/a&gt;PostgreSQL-容器化主从复制部署</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker_deploy_hive</title>
    <link href="https://imlike.cc/98f8830a.html"/>
    <id>https://imlike.cc/98f8830a.html</id>
    <published>2024-11-03T02:26:29.000Z</published>
    <updated>2024-11-17T01:55:51.617Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hshirodkar.medium.com/apache-hive-on-docker-4d7280ac6f8e">https://hshirodkar.medium.com/apache-hive-on-docker-4d7280ac6f8e</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://hshirodkar.medium.com/apache-hive-on-docker-4d7280ac6f8e&quot;&gt;https://hshirodkar.medium.com/apache-hive-on-docker-4d7280ac6f</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>缓存使用和角色定位</title>
    <link href="https://imlike.cc/e9b39bb2.html"/>
    <id>https://imlike.cc/e9b39bb2.html</id>
    <published>2024-08-03T05:52:37.000Z</published>
    <updated>2024-11-17T01:55:51.618Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://x.com/bytebytego/status/1756559741004997046/photo/1">https://x.com/bytebytego/status/1756559741004997046/photo/1</a></p><p> Read Strategies: </p><p>Cache aside  z</p><p>Read through</p><p>分别指缓存未命中时主动加载数据到缓存，以及直接通过缓存层读取数据。</p><p> Write Strategies: </p><p>Write around </p><p>Write back </p><p>Write through</p><ul><li>写策略中的 “Write around” 指直接写入数据库而非缓存，以减少缓存无效化的开销；“Write back” 指先写入缓存后定期写入数据库，以提高性能；“Write through” 指同时写入缓存和数据库，以保证数据的一致性。</li><li>不同的缓存策略可以根据实际需求组合使用，以达到最佳的性能和数据一致性平衡。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://x.com/bytebytego/status/1756559741004997046/photo/1&quot;&gt;https://x.com/bytebytego/status/1756559741004997046/photo/1&lt;/a&gt;&lt;/p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>记录这段时间账号异常</title>
    <link href="https://imlike.cc/c65c8915.html"/>
    <id>https://imlike.cc/c65c8915.html</id>
    <published>2024-08-03T00:44:45.000Z</published>
    <updated>2024-11-17T01:55:51.618Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../img/image-20240803084457424.png" alt="image-20240803084457424"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../img/image-20240803084457424.png&quot; alt=&quot;image-20240803084457424&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis对应typehandler的操作</title>
    <link href="https://imlike.cc/a29432cf.html"/>
    <id>https://imlike.cc/a29432cf.html</id>
    <published>2024-07-14T06:19:23.000Z</published>
    <updated>2024-07-14T07:01:24.569Z</updated>
    
    <content type="html"><![CDATA[<p>Mybatis在操作 非基础的 Java 对象的时候提供 Type handle 转换类似于字符串转换成 Java 对象,类似 JPA 的 ORM</p><p>TypeHandler 是 MyBatis 中用于处理 Java 类型和数据库类型之间转换的接口。通过自定义 TypeHandler，可以实现特定类型的转换逻辑，从而使得 MyBatis 在处理复杂类型时更加灵活。</p><p>TypeHandler 是 MyBatis 中用于处理 Java 类型和数据库类型之间转换的接口。通过自定义 TypeHandler，可以实现特定类型的转换逻辑，从而使得 MyBatis 在处理复杂类型时更加灵活。</p><h2 id="如何自定义-TypeHandler"><a href="#如何自定义-TypeHandler" class="headerlink" title="如何自定义 TypeHandler"></a>如何自定义 TypeHandler</h2><p>创建自定义 TypeHandler 的步骤如下：</p><ol><li><strong>实现 TypeHandler 接口</strong>：首先创建一个类并实现 <code>org.apache.ibatis.type.TypeHandler</code> 接口。</li><li><strong>重写接口方法</strong>：你需要实现四个方法：<code>setParameter</code>、<code>getResult</code> (有三个重载形式)。</li><li><strong>注册 TypeHandler</strong>：在 MyBatis 配置文件中注册自定义的 TypeHandler，或者在 Mapper 文件中指定使用该 TypeHandler。</li></ol><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><p>下面是一个简单的示例，展示如何将字符串类型转换为自定义的 Java 对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomTypeHandler</span> <span class="keyword">implements</span> <span class="title">TypeHandler</span>&lt;<span class="title">CustomType</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParameter</span><span class="params">(PreparedStatement ps, <span class="keyword">int</span> i, CustomType parameter, JdbcType jdbcType)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ps.setString(i, parameter.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomType <span class="title">getResult</span><span class="params">(ResultSet rs, String columnName)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        String columnValue = rs.getString(columnName);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CustomType(columnValue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomType <span class="title">getResult</span><span class="params">(ResultSet rs, <span class="keyword">int</span> columnIndex)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        String columnValue = rs.getString(columnIndex);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CustomType(columnValue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomType <span class="title">getResult</span><span class="params">(CallableStatement cs, <span class="keyword">int</span> columnIndex)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        String columnValue = cs.getString(columnIndex);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CustomType(columnValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在-MyBatis-配置文件中注册"><a href="#在-MyBatis-配置文件中注册" class="headerlink" title="在 MyBatis 配置文件中注册"></a>在 MyBatis 配置文件中注册</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;com.example.CustomTypeHandler&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在-configBean下配置"><a href="#在-configBean下配置" class="headerlink" title="在 configBean下配置"></a>在 configBean下配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过配置注入我们设定的类型处理</span><br></pre></td></tr></table></figure><p>通过以上步骤，你可以实现自定义的 TypeHandler，并在 MyBatis 中灵活地处理复杂类型的数据转换。</p><p>但是对于 Map&lt;K,V&gt;这种格式的数据需要单独配置后解析所有的 map</p><p>需要定义一个</p><p>private final Type MAP_TYPE;</p><p>public MybatisMapTypeHandler() {</p><p>​    this.MAP_TYPE = new TypeToken&lt;Map&lt;K, V&gt;&gt;() {</p><p>​    }.getType();</p><p>}</p><p>否则建了多个 map的 typehand会报错,如果不用 </p><p>private final Type MAP_TYPE; 来接可能对于复杂的的 map&lt;key,value&lt;List<Clazz11>&gt;&gt;这种可能会解析的不一样,</p><p>这里我使用 gson 来解析.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Mybatis在操作 非基础的 Java 对象的时候提供 Type handle 转换类似于字符串转换成 Java 对象,类似 JPA 的 ORM&lt;/p&gt;
&lt;p&gt;TypeHandler 是 MyBatis 中用于处理 Java 类型和数据库类型之间转换的接口。通过自定义 T</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>流式读取支持拓展</title>
    <link href="https://imlike.cc/undefined.html"/>
    <id>https://imlike.cc/undefined.html</id>
    <published>2024-07-14T06:18:25.000Z</published>
    <updated>2024-07-14T07:00:32.359Z</updated>
    
    <content type="html"><![CDATA[<p>在 Java 中有 URL 这个类原生支持读取 HTTP,HTTPS,FTP 的链接数据</p><p>，但有时候我们需要支持更多协议，比如 SFTP 或者自定义的协议。</p><h1 id="URL-流式读取支持拓展"><a href="#URL-流式读取支持拓展" class="headerlink" title="URL 流式读取支持拓展"></a>URL 流式读取支持拓展</h1><p>在 Java 中有 URL 这个类原生支持读取 HTTP, HTTPS, FTP 的链接数据，但有时候我们需要支持更多协议，比如 SFTP 或者自定义的协议。</p><h2 id="自定义协议处理器"><a href="#自定义协议处理器" class="headerlink" title="自定义协议处理器"></a>自定义协议处理器</h2><p>为了支持更多协议，我们可以创建自定义的 URLStreamHandler。Java 提供了 URLStreamHandler 类，我们可以通过继承这个类并实现它的抽象方法来处理自定义协议。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><strong>创建自定义的 URLStreamHandler</strong>: 继承 URLStreamHandler 类并实现 openConnection 方法。</li><li><strong>注册自定义的 URLStreamHandler</strong>: 在系统属性中注册我们的自定义协议处理器。</li><li><strong>使用自定义协议</strong>: 现在我们可以像使用普通的 URL 一样来使用自定义的协议。</li></ol><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><p>以下是一个简单的例子，展示如何创建和使用自定义的 URLStreamHandler 来处理 SFTP 协议。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URLStreamHandler;</span><br><span class="line"><span class="keyword">import</span> java.net.URLStreamHandlerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SFTPHandler</span> <span class="keyword">extends</span> <span class="title">URLStreamHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> URLConnection <span class="title">openConnection</span><span class="params">(URL url)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 在这里实现 SFTP 连接逻辑</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SFTPURLConnection(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 注册自定义的 URLStreamHandler</span></span><br><span class="line">        URL.setURLStreamHandlerFactory(<span class="keyword">new</span> URLStreamHandlerFactory() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> URLStreamHandler <span class="title">createURLStreamHandler</span><span class="params">(String protocol)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;sftp&quot;</span>.equals(protocol)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> SFTPHandler();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用自定义的 SFTP 协议</span></span><br><span class="line">        URL url = <span class="keyword">new</span> URL(<span class="string">&quot;sftp://example.com/path/to/file&quot;</span>);</span><br><span class="line">        URLConnection connection = url.openConnection();</span><br><span class="line">        <span class="comment">// 继续处理连接...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li><strong>线程安全</strong>: 确保自定义的 URLStreamHandler 是线程安全的。</li><li><strong>错误处理</strong>: 在实现自定义协议时，处理可能出现的各种异常情况。</li><li><strong>性能考虑</strong>: 优化连接和数据传输的性能，尤其是在处理大型文件或高并发场景时。</li><li>对于引入了 springmvc模块的服务,需要注意 tomcat 实现了这个方法需要我们处理下URL.setURLStreamHandlerFactory</li></ol><p>通过以上步骤，我们可以方便地扩展 Java 的 URL 支持，让其能够处理更多的协议类型，满足更复杂的需求。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 Java 中有 URL 这个类原生支持读取 HTTP,HTTPS,FTP 的链接数据&lt;/p&gt;
&lt;p&gt;，但有时候我们需要支持更多协议，比如 SFTP 或者自定义的协议。&lt;/p&gt;
&lt;h1 id=&quot;URL-流式读取支持拓展&quot;&gt;&lt;a href=&quot;#URL-流式读取支持拓展&quot; c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>对象池及其学习common-pool2</title>
    <link href="https://imlike.cc/d3e6d00c.html"/>
    <id>https://imlike.cc/d3e6d00c.html</id>
    <published>2024-07-14T06:18:05.000Z</published>
    <updated>2024-07-14T07:01:24.570Z</updated>
    
    <content type="html"><![CDATA[<p>关于使用 Apache 下的 commons-pools 可以实现对象的池化对于经常需要重复使用不想重复创建的对象,同时提供自动调用和维护的方法来维持对象的存活,它通过使用对象池来提高性能和资源利用率，特别是在需要频繁创建和销毁对象的场景中。</p><p>对于当前很多需要使用一些 SDK 来对接的一些服务来说就很方便对于对象存储的 SDK 来说其实对于的 SDK 提供了保活,只需要根据对接的服务来调用已经创建的客户端实例就可以,但是本次项目需要对接 SFTP,FTP的数据源,都是偏底层的服务,在使用过程中,需要使用客户端来创建 session 来进行通讯,而且创建 session 的过程。s</p><p>相对较为耗时，为了提高整体系统性能，我们需要使用对象池来管理这些客户端实例,这样一来，我们可以显著减少客户端实例的创建和销毁次数，从而提高系统的响应速度和资源利用率。</p><h2 id="对象池的其他使用场景"><a href="#对象池的其他使用场景" class="headerlink" title="对象池的其他使用场景"></a>对象池的其他使用场景</h2><p>除了管理 SFTP、FTP 等底层服务的客户端实例，对象池在以下场景中也非常有用：</p><ol><li><strong>数据库连接池</strong>：通过池化数据库连接，可以减少连接建立和关闭的开销，提高数据库操作的性能。</li><li><strong>线程池</strong>：线程池用于管理工作线程，避免频繁创建和销毁线程，从而提高并发处理能力。</li><li><strong>缓存对象池</strong>：在高频率访问的场景中，通过池化缓存对象可以减少内存分配和垃圾回收的压力。</li><li><strong>网络连接池</strong>：池化网络连接可以提高网络通信的效率，特别是在高并发访问的场景中。</li></ol><h2 id="常见问题及解决方案"><a href="#常见问题及解决方案" class="headerlink" title="常见问题及解决方案"></a>常见问题及解决方案</h2><p>虽然对象池可以显著提高性能，但在使用过程中也可能遇到一些问题：</p><h3 id="1-对象泄漏"><a href="#1-对象泄漏" class="headerlink" title="1. 对象泄漏"></a>1. 对象泄漏</h3><p>如果某些对象没有归还到池中，就会导致对象泄漏，从而影响池的可用性。解决方法是确保在任何情况下都能正确归还对象，最好使用 <code>try-finally</code> 或者 <code>try-with-resources</code> 语句来管理对象的借用和归还。</p><h3 id="2-对象池配置不当"><a href="#2-对象池配置不当" class="headerlink" title="2. 对象池配置不当"></a>2. 对象池配置不当</h3><p>不合理的池配置可能会导致资源浪费或不足。例如，池的最大对象数设置过大可能会占用过多的内存，而设置过小则可能无法满足高并发需求。解决方法是根据实际需求和性能测试结果来调整配置参数。</p><h3 id="3-对象的有效性"><a href="#3-对象的有效性" class="headerlink" title="3. 对象的有效性"></a>3. 对象的有效性</h3><p>池化的对象在借用和归还之间可能会失效，例如网络连接中断等。解决方法是实现对象的验证逻辑，在每次借用对象时进行有效性检查，如果对象无效则重新创建。</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="如何使用-commons-pool2"><a href="#如何使用-commons-pool2" class="headerlink" title="如何使用 commons-pool2"></a>如何使用 commons-pool2</h2><p>要使用 commons-pool2，首先需要在项目中添加相关的依赖。对于使用 Maven 的项目，可以在 <code>pom.xml</code> 文件中添加以下依赖项：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建对象池"><a href="#创建对象池" class="headerlink" title="创建对象池"></a>创建对象池</h3><p>接下来，需要创建一个对象池。以下是一个简单的示例，展示了如何创建一个字符串对象池：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.pool2.PooledObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.pool2.PooledObjectFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.pool2.impl.DefaultPooledObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.pool2.impl.GenericObjectPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.pool2.impl.GenericObjectPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StringFactory</span> <span class="keyword">implements</span> <span class="title">PooledObjectFactory</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PooledObject&lt;String&gt; <span class="title">makeObject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DefaultPooledObject&lt;&gt;(<span class="keyword">new</span> String(<span class="string">&quot;Pooled String&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroyObject</span><span class="params">(PooledObject&lt;String&gt; p)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// No specific destruction needed for String</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validateObject</span><span class="params">(PooledObject&lt;String&gt; p)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> p.getObject() != <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">activateObject</span><span class="params">(PooledObject&lt;String&gt; p)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// No activation needed for String</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">passivateObject</span><span class="params">(PooledObject&lt;String&gt; p)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// No passivation needed for String</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PoolExample</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        GenericObjectPoolConfig&lt;String&gt; config = <span class="keyword">new</span> GenericObjectPoolConfig&lt;&gt;();</span><br><span class="line">        config.setMaxTotal(<span class="number">10</span>); <span class="comment">// 设置池中最多可存在的对象数</span></span><br><span class="line">        GenericObjectPool&lt;String&gt; pool = <span class="keyword">new</span> GenericObjectPool&lt;&gt;(<span class="keyword">new</span> StringFactory(), config);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String pooledString = pool.borrowObject();</span><br><span class="line">            System.out.println(pooledString);</span><br><span class="line">            pool.returnObject(pooledString);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            pool.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置对象池"><a href="#配置对象池" class="headerlink" title="配置对象池"></a>配置对象池</h3><p>commons-pool2 提供了多种配置选项，可以根据具体需求进行调整。例如，可以设置池中对象的最大数目、最小空闲数目、最大空闲数目、对象的最大存活时间等。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GenericObjectPoolConfig&lt;String&gt; config = <span class="keyword">new</span> GenericObjectPoolConfig&lt;&gt;();</span><br><span class="line">config.setMaxTotal(<span class="number">10</span>);</span><br><span class="line">config.setMinIdle(<span class="number">2</span>);</span><br><span class="line">config.setMaxIdle(<span class="number">5</span>);</span><br><span class="line">config.setMaxWaitMillis(<span class="number">3000</span>); <span class="comment">// 最大等待时间</span></span><br></pre></td></tr></table></figure><h3 id="处理池中的对象"><a href="#处理池中的对象" class="headerlink" title="处理池中的对象"></a>处理池中的对象</h3><p>从对象池中借用和归还对象时，应该始终使用 <code>borrowObject</code> 和 <code>returnObject</code> 方法。这有助于确保对象的正确管理，并避免资源泄漏。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String pooledString = pool.borrowObject();</span><br><span class="line"><span class="comment">// 使用对象</span></span><br><span class="line">pool.returnObject(pooledString);</span><br></pre></td></tr></table></figure><p>通过合理配置和使用 commons-pool2，可以显著提高应用程序的性能和资源利用率，特别是在高并发和频繁对象创建的场景中。</p><p>ftp 的操作示例: <a href="https://commons.apache.org/proper/commons-net/apidocs/org/apache/commons/net/ftp/FTPClient.html">https://commons.apache.org/proper/commons-net/apidocs/org/apache/commons/net/ftp/FTPClient.html</a>,</p><p>sftp使用jsch 来链接 首先</p><blockquote><p>JSch jsch = new JSch();<br> Session session = jsch.getSession(username, host, port);<br>session.setPassword(password);<br>session.setConfig(“StrictHostKeyChecking”, “no”);<br>session.connect();</p><p>ChannelSftp channelSftp = null;</p><p>Channel channel = session.openChannel(“sftp”);<br> channel.connect();<br>channelSftp = (ChannelSftp) channel;</p><p>return channelSftp;</p></blockquote><p>Tips:注意事项</p><ul><li>ftpclient的客户端底层是利用 socket 来通讯的,所以如果读取文件流需要调用 <a href="https://commons.apache.org/proper/commons-net/apidocs/org/apache/commons/net/ftp/FTPClient.html#completePendingCommand()">completePendingCommand</a>()</li><li>sftp我们需要池化的是 session 每次下载文件的时候需要重新创建 session.</li><li></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;关于使用 Apache 下的 commons-pools 可以实现对象的池化对于经常需要重复使用不想重复创建的对象,同时提供自动调用和维护的方法来维持对象的存活,它通过使用对象池来提高性能和资源利用率，特别是在需要频繁创建和销毁对象的场景中。&lt;/p&gt;
&lt;p&gt;对于当前很多需要</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>google算法更新</title>
    <link href="https://imlike.cc/aae323f9.html"/>
    <id>https://imlike.cc/aae323f9.html</id>
    <published>2024-05-27T01:11:44.000Z</published>
    <updated>2024-05-27T01:12:32.813Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://uuzi.net/google-algorithm-updates-shake-up-internet-independent-websites-struggle/">谷歌算法更新引发互联网巨变，独立网站何去何从？ - 兔哥博客</a></p><p>大家好，我是兔哥！最近，谷歌对搜索算法进行了一系列重大更新，这不仅可能彻底改变互联网生态，更引发了人们对网络未来的担忧。让我们来看看这次更新会带来哪些影响。</p><h2 id="HouseFresh-com-遭重创"><a href="#HouseFresh-com-遭重创" class="headerlink" title="HouseFresh.com 遭重创"></a>HouseFresh.com 遭重创</h2><p>以HouseFresh.com为例，这个专注于空气净化器评测的网站受到了毁灭性打击。曾经能带来大量流量的搜索关键词，现在却把用户引向那些不实测评的生活杂志，错误信息百出。在2023年9月和2024年3月两次算法更新后，网站日访问量从过去的成千上万锐减到仅几百人，不得不裁员维持运营。</p><h2 id="谷歌力推-AI-概览"><a href="#谷歌力推-AI-概览" class="headerlink" title="谷歌力推 AI 概览"></a>谷歌力推 AI 概览</h2><p>谷歌的发言人声称，公司在改动算法前会严格测试，并提供反馈机会。但实际上，独立网站难以承受这些变化带来的冲击。上周,，谷歌CEO桑达尔·皮查伊宣布将推出”AI概览”功能，由AI直接生成搜索答案，谷歌搜索将成为”生成式AI”。</p><h2 id="谷歌意在解决网络弊端"><a href="#谷歌意在解决网络弊端" class="headerlink" title="谷歌意在解决网络弊端"></a>谷歌意在解决网络弊端</h2><p>谷歌这些变革是为了解决网络上的”搜索引擎优化”弊端。SEO技术旨在调整内容以获得更好的搜索识别，有些网站滥用SEO制作取悦算法而非用户的内容。</p><h2 id="有用内容更新的影响"><a href="#有用内容更新的影响" class="headerlink" title="有用内容更新的影响"></a>有用内容更新的影响</h2><p>为解决低质量搜索结果，谷歌在2022年推出了”有用内容更新”，并在2023年9月和2024年3月再次调整算法。据谷歌称，低质量、非原创内容在搜索中的比例下降了45%。</p><h2 id="意外后果-知名网站流量大减"><a href="#意外后果-知名网站流量大减" class="headerlink" title="意外后果:知名网站流量大减"></a>意外后果:知名网站流量大减</h2><p>然而，这些更新也带来意想不到的后果。数据显示，纽约杂志、GQ等知名网站在过去半年内，谷歌搜索流量出现32%、26%的大幅下降；Urban Dictionary、OprahDaily.com等网站流量也锐减一半以上。</p><h2 id="Reddit等用户平台大涨"><a href="#Reddit等用户平台大涨" class="headerlink" title="Reddit等用户平台大涨"></a>Reddit等用户平台大涨</h2><p>与此形成鲜明对比的是，Reddit等用户内容平台从谷歌获得的流量大幅增长。Reddit最新一季度收益同比增长48%，达2.43亿美元。分析师认为，这反映了人们越来越希望从他人真实经验中获取内容。</p><h2 id="出版商网站遭”重击”"><a href="#出版商网站遭”重击”" class="headerlink" title="出版商网站遭”重击”"></a>出版商网站遭”重击”</h2><p>对此，专家直言不讳地表示，谷歌的算法似乎在”对出版商网站发动战争”。大量独立博客和小网站所有者反映，他们的一切都”被完全抹去”。分析显示，谷歌倾斜于已建立的大型品牌网站，而远离小型独立网站。</p><h2 id="优质内容求生存"><a href="#优质内容求生存" class="headerlink" title="优质内容求生存"></a>优质内容求生存</h2><p>Ready Steady Cut等英国娱乐新闻网站主编表示，他们不得不大幅裁员以维持运营，原因正是谷歌算法变革导致网站流量减半。面对这种严峻形势，独立网站迫切需要更多支持和关注，优质内容才能生存下来。</p><h2 id="谷歌辩护-打击垃圾内容-提供恢复之路"><a href="#谷歌辩护-打击垃圾内容-提供恢复之路" class="headerlink" title="谷歌辩护:打击垃圾内容 提供恢复之路"></a>谷歌辩护:打击垃圾内容 提供恢复之路</h2><p>一位谷歌发言人表示，公司最近的算法更新对垃圾、非原创内容造成重大打击，并密切关注滥用搜索结果的行为。在更新后，谷歌向网站所有者提供了建议，并表示有一条恢复之路。</p><p>不过，身陷困境的网站主编哈特对此深感无助。他说:”我浪费了过去8个月的时间试图遵循谷歌的建议，但一切都没有帮助。” 尽管他们是一个拥有真实第一手经验和专业背景的网站，努力还是付诸东流，这令人心碎。</p><h2 id="AI概览真的有利于网站吗"><a href="#AI概览真的有利于网站吗" class="headerlink" title="AI概览真的有利于网站吗?"></a>AI概览真的有利于网站吗?</h2><p>谷歌声称，搜索结果中的 AI 概述实际上会增加流向网站的流量，并会继续努力支持发布商和创作者。但这一说法缺乏数据支持，业内担心会产生相反效果。</p><p>网站所有者贝瑞担心，如果谷歌AI直接回答问题，用户可能会中止搜索，导致流量进一步下降。她说AI给出的”肤浚且不准确的答案”可能无法满足用户需求。</p><p>旅行作家莱特的文章也遭到AI答案的替代，且AI给出的信息存在严重错误。尽管链接被保留，但被深埋在底部，很难获得足够曝光。</p><h2 id="内容或遭非法抓取"><a href="#内容或遭非法抓取" class="headerlink" title="内容或遭非法抓取?"></a>内容或遭非法抓取?</h2><p>谷歌承认AI工具可能给出不准确信息，但表示会持续改进。不过，一旦AI模型抓取了网站内容，可能无法将这些数据彻底删除，引发版权争议。</p><h2 id="反垄断诉讼待决"><a href="#反垄断诉讼待决" class="headerlink" title="反垄断诉讼待决"></a>反垄断诉讼待决</h2><p>除了网站所有者的质疑，谷歌同时还面临多起反垄断诉讼，控诉其在搜索引擎行业滥用垄断地位。如果输掉官司，谷歌可能面临高额罚款甚至被迫分拆。</p><h2 id="独立网站仍需关注"><a href="#独立网站仍需关注" class="headerlink" title="独立网站仍需关注"></a>独立网站仍需关注</h2><p>面对重重阻力，独立网站和内容创作者的处境艰难。HouseFresh创始人纳瓦罗感叹：”也许认为我们制作优质内容就能获得成功是太天真了。”</p><p>纳瓦罗甚至考虑过完全离开在线世界，转而在现实中开个小店经营。这反映出独立网站在如今的互联网生态中求生存的严峻形势。</p><p>因此，这些独立网站迫切需要更多支持和关注。只有让更多优质内容被公平对待，才能让互联网生态保持活力，继续为用户提供有价值的内容。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://uuzi.net/google-algorithm-updates-shake-up-internet-independent-websites-struggle/&quot;&gt;谷歌算法更新引发互联网巨变，独立网站何去何从？ - 兔哥博客&lt;/a&gt;&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MacBook电池管理建议(转载)</title>
    <link href="https://imlike.cc/c1b88394.html"/>
    <id>https://imlike.cc/c1b88394.html</id>
    <published>2024-05-21T10:37:58.000Z</published>
    <updated>2024-05-21T10:39:03.193Z</updated>
    
    <content type="html"><![CDATA[<p>转载链接 <a href="https://uuzi.net/tips-maximize-macbook-battery-lifespan/">10个实用技巧让MacBook电池寿命更持久 - 兔哥博客</a></p><p>无论你是MacBook新手还是老手，保养好电池都是延长笔记本使用寿命的关键。今天和大家分享10个实用小技巧，助你的MacBook电池在未来数年内持续保持优秀的电力续航。</p><p><img src="https://uuzi.net/wp-content/uploads/2024/05/The-Guide-to-the-Cheapest-Membership-Subscriptions-2_11zon.webp" alt="img"></p><p>首先，我们要明确两个关于可充电池的重要概念：</p><ul><li>电池续航时间：指单次充电后，设备可使用的时间长度。</li><li>电池寿命：指电池在被判废报废并需要更换之前，可使用的年限或电池循环周期数。比如，如果你的MacBook电池循环数已超过1000周期，每次充电就会明显感到续航时间变短。</li></ul><p>无论你如何使用，电池终归有其寿命限制。不过，只要遵循一些简单的使用习惯，就能最大程度延长电池的使用寿命，让你的MacBook在未来数年内持续保持出色的电力续航表现。</p><p><strong>1. 不要关闭优化电池充电</strong></p><p>“优化电池充电”功能在macOS Big Sur及更高版本的新Mac上是默认开启的。它会根据你的充电和使用习惯，自动采取以下措施来延长电池寿命：</p><ul><li>只在你需要使用MacBook时,才将电池充至100%</li><li>当笔记本插上电源时，只将电池充至80%</li><li>即使插了电源，也会先将电池放电至90%左右，再重新充电</li></ul><p>除非你有特别的理由，否则请不要在”系统设置” &gt; “电池” &gt; “电池健康状况”选项中关闭这个功能。</p><p><img src="https://uuzi.net/wp-content/uploads/2024/05/iShot_2024-05-14_19.55.23.webp" alt="img"></p><p><strong>2. 使用苹果原装或优质充电器</strong></p><p>偶尔使用其他品牌的充电器暂时应急倒无大碍，但日常使用时，你仍然应尽量选用MacBook出厂时随附的原装苹果充电器，或其他同等质量的充电设备。</p><p><strong>3. 避免快速充电</strong></p><p>MacBook Air (M1和M2型号)出厂时随机都是30W或35W的电源适配器，你可以使用MacBook Pro的60W+适配器为其快速充电。不过出于保护电池的考虑，还是应当节制使用快充，只在确有需求时方可这么做。</p><p><strong>4. 防止MacBook暴露在极热或极冷环境中</strong></p><p>直射阳光暴晒或将电脑放置在阳光直射的车内，都是锂电池最大的”克星”。同理，极度低温环境同样应当避免。所以，无论炎热还是严寒，都要注意给MacBook一个适宜的使用环境。</p><p><img src="https://uuzi.net/wp-content/uploads/2024/05/iShot_2024-05-14_19.58.35.webp" alt="img"></p><p><strong>5. 不要长期将MacBook插在电源上</strong></p><p>将MacBook长期保持插电状态也会加速电池老化。所以，我们应当在插电和电池供电之间适当切换使用。</p><p><strong>6. 避免电池充满电或电量过低</strong></p><p>努力不让MacBook电池充至100%的确挺难，因为即便你在桌前短暂使用了一两个小时，插着电源的笔记本很快就会充至满电状态。与此同时，MacBook目前还无法像iPhone 15那样，设置仅充电至80%就停止充电。</p><p>所以我们要尽量避免将电池电量消耗到极低，比如5%或10%以下。当电量降至30-40%时，就应该考虑插上电源给笔记本充电。</p><p><strong>7. 给其他设备充电时也为MacBook同步充电</strong></p><p>偶尔将MacBook当做移动电源为iPhone、AirPods等其他设备充电倒无大碍。但如果你经常这么做，反而会加速MacBook电池的老化。所以，还是另外准备一个专门的移动电源更加合适。</p><p>如果你实在需要利用MacBook为其他设备充电，请务必同时也为笔记本本身插上电源。这样一来，你的MacBook电池就不会因为给其他设备充电而剧烈消耗。</p><p><strong>8. 优化MacBook内部设置</strong></p><p>过于频繁地将MacBook电量消耗殆尽后再充电，会加快电池循环周期的耗尽。为此，你应当采取一些措施，比如关闭无用的应用程序和后台进程，以延长单次充电的使用时间。这样一来，你就无需频繁插电为笔记本充电，从而延长了电池的整体使用寿命。</p><p><strong>9. 保持系统软件的更新</strong></p><p>为了确保设备和电池的良好运作，苹果会不时进行系统优化和改进。比如最近，他们就发布了一个iOS更新，将iPhone 15的电池循环寿命延长了一倍。</p><p>同理，Mac系统也会在后台进行电池相关的优化升级。所以，你应当及时将MacBook升级至最新的macOS系统版本，以获得这些改进。</p><p><strong>10. 长期存放前将电量控制在50%左右</strong></p><p>如果你计划一段时间内不使用MacBook，那么最好在电量约50%的状态下，将电脑存放在阴凉、避潮的环境中。切记不要在电量满电或完全耗尽的状态下长期存放，那样会严重损害电池寿命。</p><p>如果你需要存放MacBook超过6个月的时间，那么应当每6个月为电池充电一次至50%左右的电量，以保证电池的健康状态。</p><p><strong>总的来说，正确使用和保养MacBook电池，可以最大限度延长电池的使用周期和寿命。通过上述10个技巧，相信你一定能享受到笔记本出色的电力续航，助力高效工作和生活，绝不会被”没电”这个小问题所打扰。这不仅环保节约，更能让你的MacBook电脑陪伴左右，高性价比地服务更多年份。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载链接 &lt;a href=&quot;https://uuzi.net/tips-maximize-macbook-battery-lifespan/&quot;&gt;10个实用技巧让MacBook电池寿命更持久 - 兔哥博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;无论你是MacBook新手还是老手，保养好电池都</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用 cloudflare对于 WARP订阅</title>
    <link href="https://imlike.cc/undefined.html"/>
    <id>https://imlike.cc/undefined.html</id>
    <published>2024-05-02T04:20:01.000Z</published>
    <updated>2024-05-02T05:05:51.705Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/vvbbnn00/WARP-Clash-API">vvbbnn00/WARP-Clash-API: 该项目可以让你通过订阅的方式使用Cloudflare WARP+，自动获取流量。.</a></p><p><a href="https://github.com/cmliu/edgetunnel">cmliu/edgetunnel: 在原版的基础上修改了显示 VLESS 配置信息转换为订阅内容。使用该脚本，你可以方便地将 VLESS 配置信息使用在线配置转换到 Clash 或 Singbox 等工具中。</a></p><p>docker-compose up -d</p><p>下面是安装 docker-compose </p><ol><li><strong>卸载旧版本的 Docker Compose</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure><ol><li><strong>下载最新版本</strong></li></ol><p>目前最新版本是 2.18.1 (截至 2023 年 5 月),下载命令如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;v2.18.1&#x2F;docker-compose-$(uname -s)-$(uname -m)&quot; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure><p>如果速度起不来可以使用这个镜像</p><blockquote><p>sudo curl -L “<a href="https://dl.ghpig.top/https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-$">https://dl.ghpig.top/https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-$</a>(uname -s)-$(uname -m)” -o /usr/local/bin/docker-compose</p></blockquote><ol><li><strong>设置执行权限</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure><ol><li><strong>创建软链接 (可选)</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose &#x2F;usr&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure><ol><li><strong>验证安装</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><p>它应该显示 <code>docker-compose version v2.18.1</code></p><p>注意以下几点:</p><ul><li>需要有 root 或 sudo 权限执行上述命令</li><li>上面的下载链接会自动根据您的系统架构获取合适的二进制文件</li><li>如果下载链接发生改变,可访问 <a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a> 获取最新下载链接</li><li>Docker Compose 2.x 版本需要 Docker 17.12.0 或更高版本</li></ul><p>按照以上步骤,您就可以成功将 Docker Compose 升级到最新的 2.18.1 版本了。升级后最好查看一下新版本的文档,了解新增的语法和功能变化。</p><p><img src="../img/image-20240502130357242.png" alt="image-20240502130357242"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/vvbbnn00/WARP-Clash-API&quot;&gt;vvbbnn00/WARP-Clash-API: 该项目可以让你通过订阅的方式使用Cloudflare WARP+，自动获取流量。.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a hre</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>macbook软件配置(新手项)</title>
    <link href="https://imlike.cc/58edfabc.html"/>
    <id>https://imlike.cc/58edfabc.html</id>
    <published>2024-03-23T05:29:26.000Z</published>
    <updated>2024-05-18T02:19:51.123Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置相关"><a href="#配置相关" class="headerlink" title="配置相关"></a>配置相关</h2><h2 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h2><p>Maccy 一款简单易用的mac记事本软件<br>PixPin  一款截图软件可以 OCR 图片<br>超级右键 修改右键的软件<br>Termius ssh的链接工具有付费版</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;配置相关&quot;&gt;&lt;a href=&quot;#配置相关&quot; class=&quot;headerlink&quot; title=&quot;配置相关&quot;&gt;&lt;/a&gt;配置相关&lt;/h2&gt;&lt;h2 id=&quot;软件推荐&quot;&gt;&lt;a href=&quot;#软件推荐&quot; class=&quot;headerlink&quot; title=&quot;软件推荐&quot;&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>sublime优化和推荐插件</title>
    <link href="https://imlike.cc/bcb72f0.html"/>
    <id>https://imlike.cc/bcb72f0.html</id>
    <published>2024-03-14T14:55:29.481Z</published>
    <updated>2024-03-14T14:55:29.481Z</updated>
    
    <content type="html"><![CDATA[<p>参考 链接 <a href="https://segmentfault.com/a/1190000022501113">https://segmentfault.com/a/1190000022501113</a></p><p>ctrol + shift +p</p><p>package control  install  package</p><p><img src="C:/Users/leek/AppData/Roaming/Typora/typora-user-images/image-20210307143657802.png" alt="image-20210307143657802"></p><p>安装后出</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考 链接 &lt;a href=&quot;https://segmentfault.com/a/1190000022501113&quot;&gt;https://segmentfault.com/a/1190000022501113&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ctrol + shift +p&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="sublime" scheme="https://imlike.cc/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>Runnable、Future 和 RunnableFuture</title>
    <link href="https://imlike.cc/undefined.html"/>
    <id>https://imlike.cc/undefined.html</id>
    <published>2023-12-15T09:17:41.000Z</published>
    <updated>2024-03-14T14:55:29.474Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Runnable"><a href="#Runnable" class="headerlink" title="Runnable"></a>Runnable</h4><ul><li><strong>定义</strong>：<code>Runnable</code> 是 Java 中表示可执行任务的接口，通常用于执行没有返回值的任务。</li><li><strong>特点</strong>：只有一个 <code>run()</code> 方法，无法获取任务执行结果。</li></ul><h4 id="Future"><a href="#Future" class="headerlink" title="Future"></a>Future</h4><ul><li><p><strong>定义</strong>：<code>Future</code> 是 Java 中表示异步计算结果的接口，用于表示一个可能还没有完成的计算。</p></li><li><p>特点</p><p>：</p><ul><li>提供 <code>get()</code> 方法来获取计算结果，该方法可能会阻塞直到计算完成。</li><li>通过 <code>isDone()</code> 方法可以检查计算是否完成。</li><li>提供 <code>cancel()</code> 方法来取消计算。</li></ul></li></ul><h4 id="RunnableFuture"><a href="#RunnableFuture" class="headerlink" title="RunnableFuture"></a>RunnableFuture</h4><ul><li><strong>定义</strong>：<code>RunnableFuture</code> 是继承自 <code>Runnable</code> 和 <code>Future</code> 的接口，用于表示一个可运行的、有结果的任务。</li><li><strong>特点</strong>：兼具了 <code>Runnable</code> 和 <code>Future</code> 的特性，既可以作为任务执行，又可以获取任务执行结果。</li></ul><h4 id="区别和优缺点"><a href="#区别和优缺点" class="headerlink" title="区别和优缺点"></a>区别和优缺点</h4><ul><li><strong>Runnable</strong>：用于表示没有返回值的任务，适用于简单的并发场景。</li><li><strong>Future</strong>：用于表示异步计算的结果，可获取计算结果和取消计算。</li><li><strong>RunnableFuture</strong>：兼具 <code>Runnable</code> 和 <code>Future</code> 的特性，适用于希望任务能够被取消、并且能够返回结果的场景。</li></ul><h4 id="常见使用场景"><a href="#常见使用场景" class="headerlink" title="常见使用场景"></a>常见使用场景</h4><ul><li><strong>Runnable</strong>：适用于执行简单的、无返回值的任务。</li><li><strong>Future</strong>：适用于需要获取异步计算结果的场景。</li><li><strong>RunnableFuture</strong>：适用于希望任务能够被取消、并且能够返回结果的场景。</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>对于使用 <code>Future</code> 的场景，需要注意在获取计算结果时可能会阻塞，需要谨慎使用。</li></ul><p>这些接口和类提供了在多线程环境中进行任务调度和管理的基本工具，根据具体需求选择合适的接口和实现类可以更好地满足不同的并发场景。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.google.common.util.concurrent.ThreadFactoryBuilder;</span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * author: leek</span><br><span class="line"> * dataTime: 2023年12月15日 下午4:16</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class TaskFeatureOverview &#123;</span><br><span class="line">    static ExecutorService executorService &#x3D;</span><br><span class="line">            new ThreadPoolExecutor(</span><br><span class="line">                    11, 33,</span><br><span class="line">                    2L, TimeUnit.MINUTES, new ArrayBlockingQueue&lt;Runnable&gt;(11),</span><br><span class="line">                    new ThreadFactoryBuilder().build());</span><br><span class="line">    static Executor executor &#x3D; new ThreadPoolExecutor(</span><br><span class="line">            11, 33,</span><br><span class="line">            2L, TimeUnit.MINUTES, new ArrayBlockingQueue&lt;Runnable&gt;(22),</span><br><span class="line">            new ThreadFactoryBuilder().build());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_runable() throws InterruptedException &#123;</span><br><span class="line">        List&lt;String&gt; strings &#x3D; new ArrayList&lt;&gt;(Arrays.asList(&quot;dd&quot;, &quot;aa&quot;, &quot;ee&quot;));</span><br><span class="line">        CountDownLatch count &#x3D; new CountDownLatch(1);</span><br><span class="line">        ((Runnable) () -&gt; &#123;</span><br><span class="line">            System.out.println(&quot;匿名内部类&quot;);</span><br><span class="line">            System.out.println(strings.toString());</span><br><span class="line">            strings.add(&quot;ww&quot;);</span><br><span class="line"></span><br><span class="line">        &#125;).run();</span><br><span class="line">        executorService.execute(() -&gt; &#123;</span><br><span class="line">            System.out.println(&quot;匿名内部类+++&quot;);</span><br><span class="line">            System.out.println(strings.toString());</span><br><span class="line">            strings.add(&quot;qq&quot;);</span><br><span class="line">            count.countDown();</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(strings.toString());</span><br><span class="line">        count.await();</span><br><span class="line">        System.out.println(strings.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_callable_sync() throws Exception &#123;</span><br><span class="line">        List&lt;String&gt; strings &#x3D; new ArrayList&lt;&gt;(Arrays.asList(&quot;dd&quot;, &quot;aa&quot;, &quot;ee&quot;));</span><br><span class="line">        CountDownLatch count &#x3D; new CountDownLatch(1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Future&lt;Object&gt; future &#x3D; executorService.submit((Callable&lt;Object&gt;) () -&gt; &#123;</span><br><span class="line">            strings.add(&quot;ww&quot;);</span><br><span class="line">            Thread.sleep(1000);</span><br><span class="line">            count.countDown();</span><br><span class="line">            return strings.size();</span><br><span class="line">        &#125;);</span><br><span class="line">        &#x2F;&#x2F; 阻塞等待数据</span><br><span class="line">        System.out.println(&quot;第一次获取:&quot; + future.get());</span><br><span class="line"></span><br><span class="line">        count.await();</span><br><span class="line">        &#x2F;&#x2F; 阻塞等待数据</span><br><span class="line">        System.out.println(&quot;第二次获取:&quot; + future.get());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_callable_async() throws Exception &#123;</span><br><span class="line">        List&lt;String&gt; strings &#x3D; new ArrayList&lt;&gt;(Arrays.asList(&quot;dd&quot;, &quot;aa&quot;, &quot;ee&quot;));</span><br><span class="line">        CountDownLatch count &#x3D; new CountDownLatch(1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Future&lt;Object&gt; future &#x3D; executorService.submit((Callable&lt;Object&gt;) () -&gt; &#123;</span><br><span class="line">            strings.add(&quot;ww&quot;);</span><br><span class="line">            Thread.sleep(1000);</span><br><span class="line">            count.countDown();</span><br><span class="line">            return strings.size();</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(&quot;第一次获取:&quot; + future.get());</span><br><span class="line"></span><br><span class="line">        count.await();</span><br><span class="line">        System.out.println(&quot;第二次获取:&quot; + future.get());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_future() &#123;</span><br><span class="line">        Class&lt;CompletableFuture&gt; completableFutureClass &#x3D; CompletableFuture.class;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_RunnableFuture() &#123;</span><br><span class="line">        Class&lt;FutureTask&gt; futureTaskClass &#x3D; FutureTask.class;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_Sick_skills() &#123;</span><br><span class="line">        List&lt;Object&gt; list &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">        list.stream().forEach(id -&gt; CompletableFuture.supplyAsync(()</span><br><span class="line">                -&gt; &#123;</span><br><span class="line">            return id;</span><br><span class="line">        &#125;).whenComplete((s, e) -&gt; &#123;</span><br><span class="line"></span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        CompletableFuture[] completableFutures &#x3D; list.stream().map(id -&gt; CompletableFuture.supplyAsync(()</span><br><span class="line">                -&gt; &#123;</span><br><span class="line">            return id;</span><br><span class="line">        &#125;).whenComplete((s, e) -&gt; &#123;</span><br><span class="line"></span><br><span class="line">        &#125;)).toArray(CompletableFuture[]::new);</span><br><span class="line">        CompletableFuture.allOf(completableFutures).join();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * @Async</span><br><span class="line">     * public Future&lt;String&gt; getValue() &#123;</span><br><span class="line">     *    &#x2F;&#x2F; ...</span><br><span class="line">     *    return result;</span><br><span class="line">     * &#125;</span><br><span class="line">     * 获取future后异步调用:</span><br><span class="line">     *</span><br><span class="line">     * java</span><br><span class="line">     *</span><br><span class="line">     * Copy code</span><br><span class="line">     *</span><br><span class="line">     * Future&lt;String&gt; future &#x3D; getValue();</span><br><span class="line">     * future.get() &#x2F;&#x2F;异步等待结果*</span><br><span class="line">     *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">package com.lee.demo.thread;&#x2F;**</span><br><span class="line"> * @author simba@onlying.cn</span><br><span class="line"> * @date 2023年12月15日 下午4:16</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">import com.google.common.util.concurrent.ThreadFactoryBuilder;</span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * author: leek</span><br><span class="line"> * dataTime: 2023年12月15日 下午4:16</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class TaskFeatureOverview &#123;</span><br><span class="line">    static ExecutorService executorService &#x3D;</span><br><span class="line">            new ThreadPoolExecutor(</span><br><span class="line">                    11, 33,</span><br><span class="line">                    2L, TimeUnit.MINUTES, new ArrayBlockingQueue&lt;Runnable&gt;(11),</span><br><span class="line">                    new ThreadFactoryBuilder().build());</span><br><span class="line">    static Executor executor &#x3D; new ThreadPoolExecutor(</span><br><span class="line">            11, 33,</span><br><span class="line">            2L, TimeUnit.MINUTES, new ArrayBlockingQueue&lt;Runnable&gt;(22),</span><br><span class="line">            new ThreadFactoryBuilder().build());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_runable() throws InterruptedException &#123;</span><br><span class="line">        List&lt;String&gt; strings &#x3D; new ArrayList&lt;&gt;(Arrays.asList(&quot;dd&quot;, &quot;aa&quot;, &quot;ee&quot;));</span><br><span class="line">        CountDownLatch count &#x3D; new CountDownLatch(1);</span><br><span class="line">        ((Runnable) () -&gt; &#123;</span><br><span class="line">            System.out.println(&quot;匿名内部类&quot;);</span><br><span class="line">            System.out.println(strings.toString());</span><br><span class="line">            strings.add(&quot;ww&quot;);</span><br><span class="line"></span><br><span class="line">        &#125;).run();</span><br><span class="line">        executorService.execute(() -&gt; &#123;</span><br><span class="line">            System.out.println(&quot;匿名内部类+++&quot;);</span><br><span class="line">            System.out.println(strings.toString());</span><br><span class="line">            strings.add(&quot;qq&quot;);</span><br><span class="line">            count.countDown();</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(strings.toString());</span><br><span class="line">        count.await();</span><br><span class="line">        System.out.println(strings.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_callable_sync() throws Exception &#123;</span><br><span class="line">        List&lt;String&gt; strings &#x3D; new ArrayList&lt;&gt;(Arrays.asList(&quot;dd&quot;, &quot;aa&quot;, &quot;ee&quot;));</span><br><span class="line">        CountDownLatch count &#x3D; new CountDownLatch(1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Future&lt;Object&gt; future &#x3D; executorService.submit((Callable&lt;Object&gt;) () -&gt; &#123;</span><br><span class="line">            strings.add(&quot;ww&quot;);</span><br><span class="line">            Thread.sleep(1000);</span><br><span class="line">            count.countDown();</span><br><span class="line">            return strings.size();</span><br><span class="line">        &#125;);</span><br><span class="line">        &#x2F;&#x2F; 阻塞等待数据</span><br><span class="line">        System.out.println(&quot;第一次获取:&quot; + future.get());</span><br><span class="line"></span><br><span class="line">        count.await();</span><br><span class="line">        &#x2F;&#x2F; 阻塞等待数据</span><br><span class="line">        System.out.println(&quot;第二次获取:&quot; + future.get());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_callable_async() throws Exception &#123;</span><br><span class="line">        List&lt;String&gt; strings &#x3D; new ArrayList&lt;&gt;(Arrays.asList(&quot;dd&quot;, &quot;aa&quot;, &quot;ee&quot;));</span><br><span class="line">        CountDownLatch count &#x3D; new CountDownLatch(1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Future&lt;Object&gt; future &#x3D; executorService.submit((Callable&lt;Object&gt;) () -&gt; &#123;</span><br><span class="line">            strings.add(&quot;ww&quot;);</span><br><span class="line">            Thread.sleep(1000);</span><br><span class="line">            count.countDown();</span><br><span class="line">            return strings.size();</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(&quot;第一次获取:&quot; + future.get());</span><br><span class="line"></span><br><span class="line">        count.await();</span><br><span class="line">        System.out.println(&quot;第二次获取:&quot; + future.get());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_future() &#123;</span><br><span class="line">        Class&lt;CompletableFuture&gt; completableFutureClass &#x3D; CompletableFuture.class;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_RunnableFuture() &#123;</span><br><span class="line">        Class&lt;FutureTask&gt; futureTaskClass &#x3D; FutureTask.class;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void t1_Sick_skills() &#123;</span><br><span class="line">        List&lt;Object&gt; list &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">        list.stream().forEach(id -&gt; CompletableFuture.supplyAsync(()</span><br><span class="line">                -&gt; &#123;</span><br><span class="line">            return id;</span><br><span class="line">        &#125;).whenComplete((s, e) -&gt; &#123;</span><br><span class="line"></span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        CompletableFuture[] completableFutures &#x3D; list.stream().map(id -&gt; CompletableFuture.supplyAsync(()</span><br><span class="line">                -&gt; &#123;</span><br><span class="line">            return id;</span><br><span class="line">        &#125;).whenComplete((s, e) -&gt; &#123;</span><br><span class="line"></span><br><span class="line">        &#125;)).toArray(CompletableFuture[]::new);</span><br><span class="line">        CompletableFuture.allOf(completableFutures).join();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * @Async</span><br><span class="line">     * public Future&lt;String&gt; getValue() &#123;</span><br><span class="line">     *    &#x2F;&#x2F; ...</span><br><span class="line">     *    return result;</span><br><span class="line">     * &#125;</span><br><span class="line">     * 获取future后异步调用:</span><br><span class="line">     *</span><br><span class="line">     * java</span><br><span class="line">     *</span><br><span class="line">     * Copy code</span><br><span class="line">     *</span><br><span class="line">     * Future&lt;String&gt; future &#x3D; getValue();</span><br><span class="line">     * future.get() &#x2F;&#x2F;异步等待结果*</span><br><span class="line">     *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考链接:<br><a href="https://mp.weixin.qq.com/s/M6LSx2HwwW4_YhguAeEs_g">如何合理估算 Java 线程池大小：综合指南</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;Runnable&quot;&gt;&lt;a href=&quot;#Runnable&quot; class=&quot;headerlink&quot; title=&quot;Runnable&quot;&gt;&lt;/a&gt;Runnable&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：&lt;code&gt;Runnable&lt;/code</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>有趣的web</title>
    <link href="https://imlike.cc/ea10c0bb.html"/>
    <id>https://imlike.cc/ea10c0bb.html</id>
    <published>2023-12-10T08:22:33.000Z</published>
    <updated>2024-03-14T14:55:29.484Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://terminus2049.github.io/Not-exist-in-douban/">https://terminus2049.github.io/Not-exist-in-douban/</a>  404影音<br><a href="http://matrixmultiplication.xyz/">http://matrixmultiplication.xyz/</a> 矢量计算可视化</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://terminus2049.github.io/Not-exist-in-douban/&quot;&gt;https://terminus2049.github.io/Not-exist-in-douban/&lt;/a&gt;  404影音&lt;br&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>stash配置和Quantumult X,suger的区别</title>
    <link href="https://imlike.cc/2f16d0ef.html"/>
    <id>https://imlike.cc/2f16d0ef.html</id>
    <published>2023-12-08T08:09:18.000Z</published>
    <updated>2024-03-14T14:55:29.481Z</updated>
    
    <content type="html"><![CDATA[<p>YouTube APP去广告 - 使用 Quantumult X / Surge/ Shadowrocket/ Loon/Stash 完美屏蔽YouTube App广告小白教程（神机规则） - 毒奶 - 欢迎使用代理访问本站。</p><p><a href="https://github.com/deezertidal/stash-override">https://github.com/deezertidal/stash-override</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!name &#x3D; YouTube去广告</span><br><span class="line">#!desc &#x3D;支持pip，后台播放</span><br><span class="line">#!author &#x3D; Maasea </span><br><span class="line">#!homepage&#x3D;https:&#x2F;&#x2F;whatshub.top</span><br><span class="line">#!icon &#x3D; https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Koolson&#x2F;Qure&#x2F;master&#x2F;IconSet&#x2F;Color&#x2F;YouTube.png</span><br><span class="line">name: YouTubequguanggao</span><br><span class="line">desc: 支持pip，后台播放</span><br><span class="line">http:</span><br><span class="line">  mitm:</span><br><span class="line">    - &quot;-redirector*.googlevideo.com&quot;</span><br><span class="line">    - &quot;*.googlevideo.com&quot;</span><br><span class="line">    - &quot;www.youtube.com&quot;</span><br><span class="line">    - &quot;s.youtube.com&quot;</span><br><span class="line">    - &quot;youtubei.googleapis.com&quot;</span><br><span class="line">  script:</span><br><span class="line">    - match: ^https:\&#x2F;\&#x2F;youtubei\.googleapis\.com\&#x2F;youtubei\&#x2F;v1\&#x2F;(browse|next|player|search|reel\&#x2F;reel_watch_sequence|guide|account\&#x2F;get_setting)\?</span><br><span class="line">      name: YouTubequguanggao1</span><br><span class="line">      type: response</span><br><span class="line">      require-body: true</span><br><span class="line">      binary-mode: true</span><br><span class="line">      timeout: 10</span><br><span class="line">    - match: ^https:\&#x2F;\&#x2F;youtubei\.googleapis\.com\&#x2F;youtubei\&#x2F;v1\&#x2F;(browse|next|player|reel\&#x2F;reel_watch_sequence)\?</span><br><span class="line">      name: YouTubequguanggao2</span><br><span class="line">      type: request</span><br><span class="line">      require-body: true</span><br><span class="line">      binary-mode: true</span><br><span class="line">      timeout: 10</span><br><span class="line">  rewrite:</span><br><span class="line">    - (^https?:\&#x2F;\&#x2F;[\w-]+\.googlevideo\.com\&#x2F;(?!dclk_video_ads).+?)&amp;ctier&#x3D;L(&amp;.+?),ctier,(.+) $1$2$3 302</span><br><span class="line">    - ^https?:\&#x2F;\&#x2F;[\w-]+\.googlevideo\.com\&#x2F;(?!(dclk_video_ads|videoplayback\?)).+&amp;oad - reject-200</span><br><span class="line">    - ^https?:\&#x2F;\&#x2F;(www|s)\.youtube\.com\&#x2F;api\&#x2F;stats\&#x2F;ads - reject-200</span><br><span class="line">    - ^https?:\&#x2F;\&#x2F;(www|s)\.youtube\.com\&#x2F;(pagead|ptracking) - reject-200</span><br><span class="line">    - ^https?:\&#x2F;\&#x2F;s\.youtube\.com\&#x2F;api\&#x2F;stats\&#x2F;qoe\?adcontext - reject-200</span><br><span class="line">script-providers:</span><br><span class="line">  YouTubequguanggao1:</span><br><span class="line">    url: https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Maasea&#x2F;sgmodule&#x2F;master&#x2F;Script&#x2F;Youtube&#x2F;dist&#x2F;youtube.response.beta.js</span><br><span class="line">    interval: 86400</span><br><span class="line">  YouTubequguanggao2:</span><br><span class="line">    url: https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Maasea&#x2F;sgmodule&#x2F;master&#x2F;Script&#x2F;Youtube&#x2F;dist&#x2F;youtube.request.beta.js</span><br><span class="line">    interval: 86400</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;YouTube APP去广告 - 使用 Quantumult X / Surge/ Shadowrocket/ Loon/Stash 完美屏蔽YouTube App广告小白教程（神机规则） - 毒奶 - 欢迎使用代理访问本站。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>代码复用逻辑和类命名</title>
    <link href="https://imlike.cc/c66fd762.html"/>
    <id>https://imlike.cc/c66fd762.html</id>
    <published>2023-11-20T14:57:01.000Z</published>
    <updated>2024-03-16T01:26:41.304Z</updated>
    
    <content type="html"><![CDATA[<p>对于静态工具类的抽象复用,可以考虑以下几点:</p><ol><li>将公共逻辑提取出来,放到一个基类或接口中。子类只需要实现自己业务相关的逻辑。</li><li>使用工厂方法模式,定义一个工厂类,根据参数创建不同的工具类实例。调用端只需要使用工厂类,不需关心具体实现。</li><li>使用依赖注入框架,如Spring,在配置文件中定义不同的工具类bean,并注入到其他类中使用。</li><li>将静态方法改成普通方法,实例化为单例对象,注入到其他类中复用。</li><li>使用策略模式,定义不同算法的策略类,通过组合和委托的方式复用策略。</li><li>如果工具类方法数量不多,也可以简单地提取到一个公共类中,在需要使用的地方直接调用即可。</li><li>考虑使用函数式编程思想,将静态方法改写为无状态的函数,更便于复用。<br>主要还是要根据实际情况划分出可复用的部分,然后通过封装、依赖注入、组合、委托等方式提高复用性。</li></ol><p>常见命名的后缀 </p><ul><li>Util 通常用于表示一个实用工具类</li><li>Helper 用于表示一个帮助类，通常用于提供与特定对象或功能相关的辅助方法。Helper 类的方法可能需要依赖于特定对象的实例。</li><li>Utils 与 “Util” 类似，用于表示一组实用工具方法。它通常与多个功能相关，而不是特定于单一功能。</li><li>Toolkit 通常表示一个工具包或工具集，它包含一组相关的工具、资源或库，用于执行特定的任务或解决特定的问题。</li></ul><p><a href="https://cloud.tencent.com/developer/article/1798664">SDK 开发规范-腾讯云开发者社区-腾讯云</a></p><p><a href="https://www.cnblogs.com/scar1et/p/15177861.html">通用类命名规范 - 就永远夏天 - 博客园</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;对于静态工具类的抽象复用,可以考虑以下几点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将公共逻辑提取出来,放到一个基类或接口中。子类只需要实现自己业务相关的逻辑。&lt;/li&gt;
&lt;li&gt;使用工厂方法模式,定义一个工厂类,根据参数创建不同的工具类实例。调用端只需要使用工厂类,不需关心具体实现。</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>appletv安装和相关软件推荐</title>
    <link href="https://imlike.cc/undefined.html"/>
    <id>https://imlike.cc/undefined.html</id>
    <published>2023-11-12T11:15:07.000Z</published>
    <updated>2024-03-16T01:12:54.542Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://appfigures.com/top-apps/apple-tv/hong-kong/top-overall">https://appfigures.com/top-apps/apple-tv/hong-kong/top-overall</a>  apple tv 应用排行榜</p><p><a href="https://github.com/fanmingming/live">https://github.com/fanmingming/live</a>  m3u 在线地址</p><h2 id="国际版的爱优腾"><a href="#国际版的爱优腾" class="headerlink" title="国际版的爱优腾"></a>国际版的爱优腾</h2><p><a href="https://apps.apple.com/us/app/iqiyi-video/id1190755526">iQIYI Video on the App Store</a></p><p><a href="https://apps.apple.com/au/app/wetv-asian-local-dramas/id1441531611">WeTV Asian &amp; Local Dramas on the App Store</a></p><h2 id="vod类播放器"><a href="#vod类播放器" class="headerlink" title="vod类播放器"></a>vod类播放器</h2><h3 id="Syncnext-三角播放器-需内购"><a href="#Syncnext-三角播放器-需内购" class="headerlink" title="Syncnext(三角播放器 需内购)"></a>Syncnext(三角播放器 需内购)</h3><p><a href="https://apps.apple.com/us/app/syncnext/id1591770603">Syncnext on the App Store</a></p><h3 id="XPTV"><a href="#XPTV" class="headerlink" title="XPTV"></a>XPTV</h3><p><a href="https://apps.apple.com/us/app/xptv/id6459409368">XPTV on the App Store</a></p><p>XPTV 是一款支持VOD、M3U、IPTV等协议的多功能播放器</p><h2 id="CMSPlayer"><a href="#CMSPlayer" class="headerlink" title="CMSPlayer"></a>CMSPlayer</h2><p><a href="https://apps.apple.com/us/app/cmsplayer/id6450680262">CMSPlayer on the App Store</a></p><h2 id="音乐流媒体"><a href="#音乐流媒体" class="headerlink" title="音乐流媒体"></a>音乐流媒体</h2><h3 id="Musify-已下架"><a href="#Musify-已下架" class="headerlink" title="Musify(已下架)"></a>Musify(已下架)</h3><p>支持 网易云音乐</p><p><a href="https://apps.apple.com/us/app/musify/id6470739879">Connecting to Apple Music.</a></p><h3 id="Spotify-Music-and-Podcasts"><a href="#Spotify-Music-and-Podcasts" class="headerlink" title="Spotify - Music and Podcasts"></a>Spotify - Music and Podcasts</h3><p><a href="https://apps.apple.com/us/app/spotify-music-and-podcasts/id324684580">Spotify - Music and Podcasts on the App Store</a></p><h2 id="B站三方客户端"><a href="#B站三方客户端" class="headerlink" title="B站三方客户端"></a>B站三方客户端</h2><h2 id="Cheers"><a href="#Cheers" class="headerlink" title="Cheers"></a>Cheers</h2><p><a href="https://apps.apple.com/us/app/cheers-danmu-player/id1643375332">Cheers - Danmu Player on the App Store</a></p><h2 id="Miao-Project"><a href="#Miao-Project" class="headerlink" title="Miao Project"></a>Miao Project</h2><p>已经从应用商店下架</p><h3 id="弹幕播放器-danmuBox"><a href="#弹幕播放器-danmuBox" class="headerlink" title="弹幕播放器 danmuBox"></a>弹幕播放器 danmuBox</h3><p><a href="https://apps.apple.com/us/app/%E5%BC%B9%E5%B9%95%E6%92%AD%E6%94%BE%E5%99%A8-danmubox/id6458593076">弹幕播放器 danmuBox on the App Store</a></p><h2 id="投屏类"><a href="#投屏类" class="headerlink" title="投屏类"></a>投屏类</h2><p>主要用于类似于安卓乐播投屏，目前在安卓盒子里面当贝投屏是优化最好的没有广告，appleTV 原生支持 airplay，需要额外支持DLNA。</p><h3 id="推荐-1-DLNA"><a href="#推荐-1-DLNA" class="headerlink" title="推荐 1 DLNA"></a>推荐 1 DLNA</h3><p><img src="../img/image-20240316083903879.jpg" alt="image-20240316083903879"></p><h3 id="推荐-2-Unplay"><a href="#推荐-2-Unplay" class="headerlink" title="推荐 2 Unplay"></a>推荐 2 Unplay</h3><p>网上可以搜索到</p><p><a href="https://apps.apple.com/us/app/unplay/id6450034641">UnPlay on the App Store</a></p><h2 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h2><h3 id="Alplayer"><a href="#Alplayer" class="headerlink" title="Alplayer"></a>Alplayer</h3><p><a href="https://apps.apple.com/us/app/alplayer/id1660917007">Alplayer on the App Store</a></p><p>原生支持阿里，夸克</p><h3 id="VidHub-免费"><a href="#VidHub-免费" class="headerlink" title="VidHub(免费)"></a>VidHub(免费)</h3><p><a href="https://apps.apple.com/us/app/vidhub-video-library-player/id1659622164">VidHub -Video Library &amp; Player on the App Store</a></p><h3 id="Fileball"><a href="#Fileball" class="headerlink" title="Fileball"></a>Fileball</h3><p><a href="https://apps.apple.com/us/app/fileball/id1558391784">Fileball on the App Store</a></p><h2 id="电视直播类"><a href="#电视直播类" class="headerlink" title="电视直播类"></a>电视直播类</h2><h3 id="APTV-免费"><a href="#APTV-免费" class="headerlink" title="APTV(免费)"></a>APTV(免费)</h3><p><a href="https://apps.apple.com/us/app/aptv/id1630403500">APTV on the App Store</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://appfigures.com/top-apps/apple-tv/hong-kong/top-overall&quot;&gt;https://appfigures.com/top-apps/apple-tv/hong-kong/top-overall&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>空间大数据处理框架</title>
    <link href="https://imlike.cc/c243b492.html"/>
    <id>https://imlike.cc/c243b492.html</id>
    <published>2023-11-07T11:38:03.000Z</published>
    <updated>2024-03-14T14:55:29.485Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大数据计算框架简介"><a href="#大数据计算框架简介" class="headerlink" title="大数据计算框架简介"></a>大数据计算框架简介</h1><p>Hadoop，Spark、Flink是目前重要的三大分布式计算系统</p><ul><li>Hadoop用于离线复杂大数据处理</li><li>Spark用于离线快速的大数据处理</li><li>Flink用于在线实时的大数据处理</li></ul><h2 id="1-1-Hadoop"><a href="#1-1-Hadoop" class="headerlink" title="1.1. Hadoop"></a>1.1. Hadoop</h2><p>Hadoop是一个由Apache基金会所开发的分布式系统基础架构，主要解决海量数据的存储和分析计算问题。</p><p>广义上来说，Hadoop通常是指一个更广泛的概念——Haddop生态圈。</p><p><img src="https://rd.dtdream.com/download/attachments/44586449/image2023-7-31_15-23-47.png?version=1&modificationDate=1690788227000&api=v2" alt="img"></p><p><strong>1) Hadoop分布式文件系统(HDFS)</strong></p><p>HDFS (Hadoop Distributed File System) ，它是一个<strong>文件系统</strong>，用来存储文件，通过目录树来定位文件，其次，它是<strong>分布式</strong>的，由很多服务器联合起来实现其功能，集群中的服务器有各自的角色。</p><p>使用场景：HDFS适合<strong>一次写入，多次读出</strong>的场景，且不支持文件的修改，适合用来做数据分析，并不适合用来做网盘应用。</p><p><strong>2) Hadoop MapReduce引擎</strong></p><p>MapReduce是一种<strong>并行程序设计模型与方法</strong>，用于大规模数据集的并行运算。概念”Map（映射）”和”Reduce（归约）”是它们的主要思想。</p><p><img src="https://rd.dtdream.com/download/attachments/44586449/image2023-7-31_15-30-30.png?version=1&modificationDate=1690788630000&api=v2" alt="img"></p><h2 id="1-2-Spark"><a href="#1-2-Spark" class="headerlink" title="1.2. Spark"></a>1.2. Spark</h2><p>Apache Spark是专为大规模数据处理而设计的快速通用的计算引擎。Spark是类Hadoop MapReduce的通用并行框架。Spark拥有Hadoop MapReduce所具有的优点；但不同于MapReduce的是，Job中间的输出结果可以保存在内存中，从而不再需要读写HDFS，因此Spark能更好地适用于数据挖掘与机器学习等需要迭代的MapReduce的算法。</p><p><img src="https://rd.dtdream.com/download/attachments/44586449/image2023-7-31_15-35-39.png?version=1&modificationDate=1690788939000&api=v2" alt="img"></p><h2 id="1-3-Flink"><a href="#1-3-Flink" class="headerlink" title="1.3. Flink"></a>1.3. Flink</h2><p>Apache Flink是一个框架和分布式处理引擎，用于对无界和有界数据流进行有状态计算。Flink 被设计在所有常见的集群环境中运行，以内存执行速度和任意规模来执行计算。</p><p><strong>流数据：</strong>在自然环境中，数据的产生原本就是流式的。但是当你分析数据时，可以围绕 有界流（bounded）或 无界流（unbounded）两种模型来组织处理数据，当然，选择不同的模型，程序的执行和处理方式也都会不同。</p><p><strong>离线计算的代表spark和flink的对比</strong></p><p>在spark中，一切都是由批次组成的，离线数据是一个大批次，而实时数据是由一个一个无限的小批次组成的。而在flink中，一切都是由流组成的，离线数据是有界限的流，实时数据是一个没有界限的流。</p><p><strong>有界流\</strong>：****数据有时间的界限，比如我们长说某天的数据、某月的数据。</p><p><strong>无界流：</strong>数据没有时间的界限，所处理的数据是持续不断的输入的。因此程序必须持续不断地对到达的数据进行处理。</p><h1 id="2-Spark简介"><a href="#2-Spark简介" class="headerlink" title="2. Spark简介"></a>2. Spark简介</h1><h2 id="2-1-Saprk相关概念"><a href="#2-1-Saprk相关概念" class="headerlink" title="2.1. Saprk相关概念"></a>2.1. Saprk相关概念</h2><p><strong>RDD（Resilient Distributed Dataset）</strong>：弹性分布式数据集，是Spark的核心部分，可以理解为一个<strong>分布式</strong>数据结构的封装，并在此基础上提供了各种数据操作的API。其中，数据操作可以分成<strong>转换（**</strong>transformation**<strong>）</strong>和<strong>行动（**</strong>action**<strong>）</strong>两类，<strong>转换构建各**</strong>RDD**<strong>之间的依赖关系，但不会实际执行，只有遇到行动操作后才会实际提交作业触发执行</strong>。RDD之间的依赖关系构成了RDD的<strong>血缘</strong>，当RDD丢失时可以通过血缘关系重新执行生成，保证了RDD的容错性。</p><p>举例：</p><table><thead><tr><th align="left">数据集</th><th align="left">map</th><th align="left">reduce</th></tr></thead><tbody><tr><td align="left">{x: x∈N+, x&lt;10 }</td><td align="left">{x: f(x)}</td><td align="left">{x: ∑f(x)}、{x: Πf(x)}等</td></tr></tbody></table><table><thead><tr><th align="left">类别</th><th align="left">函数名</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">转换算子</td><td align="left">map</td><td align="left">将处理的数据逐条进行映射转换，这里的转换可以是类型的转换，也可以是值的转换</td></tr><tr><td align="left">mapPartitions</td><td align="left">将待处理的数据以分区为单位发送到计算节点进行处理，这里的处理是指可以进行任意的处理，包括过滤</td><td align="left"></td></tr><tr><td align="left">mapPartitionsWithindex</td><td align="left">将待处理的数据以分区为单位发送到计算节点进行处理，这里的处理是指可以进行任意的处理，包括过滤，在处理同时可以获取当前分区的索引</td><td align="left"></td></tr><tr><td align="left">flatMap</td><td align="left">将处理的数据进行扁平化后再进行映射处理，所以算子也称之为扁平映射</td><td align="left"></td></tr><tr><td align="left">glom</td><td align="left">将同一个分区的数据直接转换为相同类型的内存数组进行处理，分区不变</td><td align="left"></td></tr><tr><td align="left">groupBy</td><td align="left">将数据根据指定的规则进行分组，分区默认不变，但是数据会被打乱重新组合，我们将这样的操作称之为shuffle，极限情况下，数据可能被分到同一个分区中</td><td align="left"></td></tr><tr><td align="left">filter</td><td align="left">将数据根据执行的规则进行筛选过滤，符合规则的数据保留，不符合规则的数据丢弃。当数据进行筛选过滤后，分区不变，但是分区内的数据可能不均衡，生产环境下，可能出现数据倾斜</td><td align="left"></td></tr><tr><td align="left">sample</td><td align="left">根据指定的规则聪数据中抽取数据</td><td align="left"></td></tr><tr><td align="left">coalesce</td><td align="left">根据数据量进行缩减分区，用于大数据集过滤后，提高小数据集的执行效率，减少任务调度成本</td><td align="left"></td></tr><tr><td align="left">distinct</td><td align="left">将数据集中的重复数据进行去重</td><td align="left"></td></tr><tr><td align="left">repartitions</td><td align="left">调整分区数量</td><td align="left"></td></tr><tr><td align="left">sortBy</td><td align="left">可以根据指定的规则对数据源中的数据进行排序</td><td align="left"></td></tr><tr><td align="left">intersection</td><td align="left">对源RDD和参数RDD求交集后返回一个新的RDD</td><td align="left"></td></tr><tr><td align="left">union</td><td align="left">对源RDD和参数RDD求并集后返回一个新的RDD</td><td align="left"></td></tr><tr><td align="left">subtract</td><td align="left">对源RDD和参数RDD求差集后返回一个新的RDD</td><td align="left"></td></tr><tr><td align="left">zip</td><td align="left">相同位置的数据拉取到一块</td><td align="left"></td></tr><tr><td align="left">partitionBy</td><td align="left">将数据按照指定Partitioner重新进行分区</td><td align="left"></td></tr><tr><td align="left">reduceByKey</td><td align="left">将相同的key进行分组，将value聚合</td><td align="left"></td></tr><tr><td align="left">groupByKey</td><td align="left">将分区的数据直接转换为相同类型的内存数组进行后续处理</td><td align="left"></td></tr><tr><td align="left">aggregateByKey</td><td align="left">将数据根据不同规则进行分区内计算和分区间计算</td><td align="left"></td></tr><tr><td align="left">flodByKey</td><td align="left">foldByKey就是aggregateByKey的简化版本，当aggregateByKey的第二个参数计算逻辑相同时就可以用foldByKey</td><td align="left"></td></tr><tr><td align="left">combineByKey</td><td align="left">需要三个参数  1.将相同key的第一个数据进行结构的转换，实现操作 2.分区内计算规则 3.分区间计算规则</td><td align="left"></td></tr><tr><td align="left">join</td><td align="left">在类型为(K,V)和(K,W)的RDD上调用，返回一个相同的key对应的所有元素连接在一起的（K,(v,w)）的RDD</td><td align="left"></td></tr><tr><td align="left">leftOuterJoin</td><td align="left">类似于sql的左外连接</td><td align="left"></td></tr><tr><td align="left">rightOuterJoin</td><td align="left">类似于sql的右外连接</td><td align="left"></td></tr><tr><td align="left">cogroup</td><td align="left">在类型(K,V)和(K,W)的RDD上调用，返回一个(K,(Iterable<V>,Iterable<W>))类型的RDD</td><td align="left"></td></tr><tr><td align="left">…</td><td align="left">…</td><td align="left"></td></tr><tr><td align="left">行动算子</td><td align="left">reduce</td><td align="left">聚集RDD中的所有元素，先聚合分区内数据，再聚合分区间数</td></tr><tr><td align="left">collect</td><td align="left">方法会将不同分区的数据按照分区顺序采集到Driver端内存中，形成数组</td><td align="left"></td></tr><tr><td align="left">count</td><td align="left">数据源中数据的个数</td><td align="left"></td></tr><tr><td align="left">first</td><td align="left">数据源中数据的第一个</td><td align="left"></td></tr><tr><td align="left">take</td><td align="left">获取n个数据</td><td align="left"></td></tr><tr><td align="left">takeOrdered</td><td align="left">数据排序后取n个数据</td><td align="left"></td></tr><tr><td align="left">aggregate</td><td align="left">分区的数据通过初始值和分区内的数据进行聚合，然后再和初始值进行分区间的数据聚合</td><td align="left"></td></tr><tr><td align="left">fold</td><td align="left">折叠操作,aggregate的简化版操作</td><td align="left"></td></tr><tr><td align="left">countByKey</td><td align="left">统计每种key的个数</td><td align="left"></td></tr><tr><td align="left">…</td><td align="left">…</td><td align="left"></td></tr></tbody></table><p><strong>Partition</strong>：数据分区，即RDD进行数据划分的单元，也是Spark数据处理的单元，任务的数量由分区数量确定，一个任务处理一个分区的数据。</p><p><strong>Dependency</strong>：RDD之间的依赖关系。分为窄依赖（NarrowDependency）和Shuffle依赖。前者表示子RDD中的分区依赖于父RDD中固定数量的分区，包括依赖一个分区的OneToOneDependency和一定范围内多个分区的RangeDependency；后者也称为宽依赖，子RDD中的分区可能对父RDD中所有的分区产生依赖，具体依赖关系取决于分区器partitioner。</p><p><strong>Job</strong>：Spark中的作业，<strong>对**</strong>RDD**<strong>的一个行动操作对应一个作业</strong>。每个作业包括了该RDD的行动操作以及构成当前RDD血缘关系的所有转换操作，一个Spark应用可以包含多个作业。</p><p><strong>Stage</strong>：在每个作业中，Spark会<strong>根据**</strong>shuffle**<strong>依赖将作业划分成多个阶段</strong>。从最后一个触发行动操作的RDD开始（最后一个属于ResultStage），对RDD的依赖进行回溯，如果遇到shuffle依赖，则将shuffle之前的RDD视为一个阶段（ShuffleMapStage），shuffle之后的RDD到回溯起点之间所有的RDD视为一个阶段，接着从shuffle之前的RDD开始继续回溯，直到回溯至与外部数据源相关的RDD为止，如图1所示。</p><p><strong>Task</strong>：每个阶段中，Spark会<strong>根据**</strong>RDD**<strong>的分区数量，创建相同数量的任务</strong>，每个任务处理一个分区的数据。其中，ShuffleMapStage中的任务为ShuffleMapTask，ResultStage中的任务为ResultTask。</p><p>下图为Spark中Stage的划分方式</p><p><img src="https://rd.dtdream.com/download/attachments/44586449/image2023-7-26_14-43-6.png?version=1&modificationDate=1690353785000&api=v2" alt="img"></p><h2 id="2-2-Spark核心模块"><a href="#2-2-Spark核心模块" class="headerlink" title="2.2. Spark核心模块"></a>2.2. Spark核心模块</h2><p>Spark的模块组成包括核心模块Spark Core以及建立在核心模块之上的扩展模块Spark SQL、Spark Streaming、GraphX、MLlib。Spark核心模块提供了Spark中最基础最核心的功能，包括：</p><p><strong>基础设施</strong>：分为负责参数配置的SparkConf，负责Spark跨节点组件之间通信的基于netty实现的RPC框架，负责SparkContext内部组件间通信的事件总线ListenerBus，负责监控各个组件运行期状态的度量系统；</p><p><strong>SparkContext：</strong>作为Spark所有功能的集成者和用户程序开发的接口，其内部封装了网络通信、消息通信、存储体系、计算引擎、度量系统、WebUI等内容，这些功能对开发人员来说都是透明的；</p><p><strong>SparkEnv</strong>：是Spark执行环境，任务运行所必需的组件，由RpcEnv、序列化管理器、BroadcastManager、MapOutputTracker、存储体系、度量系统、OutputCommitCoordinator等组件组成；</p><p><strong>存储体系：</strong>分为内存存储管理和磁盘存储管理，Spark的内存空间提供了Tungsten的实现，对堆外内存进行管理。此外，Spark的内存存储空间和计算存储空间之间的边界是“软”边界，当一方资源不够时可向另一方借用，提高了资源利用率；</p><p><strong>调度体系：</strong>分为DAGScheduler和TaskScheduler，内置在SparkContext中。DAGScheduler负责解析RDD之间的依赖，按照shuffle操作划分阶段，根据阶段创建TaskSet，TaskScheduler负责按照FAIR或FIFO调度算法对TaskSet进行调度，为每个任务分配可执行的Executor，并将序列化后的任务发送到指定的Executor上执行；</p><p><strong>计算引擎：</strong>由内存管理器、Tungsten、任务内存管理器、外部排序器、Shuffle管理器等组成，其中外部排序器用于在map端或者reduce端对ShuffleMapTask计算得到的中间结果进行排序、聚合等操作，Shuffle管理器用于将各个分区对应的ShuffleMapTask产生的中间结果持久化到磁盘，并在reduce端按照分区远程拉取生成的中间结果。</p><h2 id="2-3-Spark集群架构"><a href="#2-3-Spark集群架构" class="headerlink" title="2.3. Spark集群架构"></a>2.3. Spark集群架构</h2><p>从集群部署的角度来看，Spark集群由集群管理器（Cluster Manager）、工作节点（Worker）、执行器（Executor）、驱动器（Driver）、应用程序（Application）等部分组成。<br><img src="https://rd.dtdream.com/download/attachments/44586449/image2023-8-1_14-20-30.png?version=1&modificationDate=1690870831000&api=v2" alt="img"></p><h3 id="2-3-1-Driver"><a href="#2-3-1-Driver" class="headerlink" title="2.3.1. Driver"></a>2.3.1. Driver</h3><p>用于运行Spark程序的 main 方法，创建SparkContext对象</p><p>Driver在spark作业执行时主要负责：</p><p>1）启动SparkContext或SparkSession，将用户程序转化为作业（Job）；</p><p>2）在Executor之间调度任务（Task）；</p><p>3）跟踪Executor的执行情况；</p><p>4）通过UI展示查询运行情况。</p><h3 id="2-3-2-Cluster-Manager"><a href="#2-3-2-Cluster-Manager" class="headerlink" title="2.3.2. Cluster Manager"></a>2.3.2. Cluster Manager</h3><p><strong>在YARN部署模式下为ResourceManager</strong></p><p>负责对整个集群资源的分配与管理，不负责对Executor的资源的分配。</p><p>常见的集群管理工具有<strong>Yarn</strong>、Mesos、Kubernetes、Standalone。</p><h3 id="2-3-3-Worker"><a href="#2-3-3-Worker" class="headerlink" title="2.3.3. Worker"></a>2.3.3. Worker</h3><p><strong>在YARN部署模式下为NodeManager</strong></p><p>负责启动和管理Executor，将Executor状态信息同步给Cluster Manager。</p><h3 id="2-3-4-Executor"><a href="#2-3-4-Executor" class="headerlink" title="2.3.4. Executor"></a>2.3.4. Executor</h3><p>负责执行Spark作业中具体的任务，任务彼此之间相互独立。</p><p>Executor 有两个核心功能：</p><p>1）向Driver认领属于自己的任务，接收任务后负责运行Spark Task，并将结果返回给Driver。</p><p>2）通过自身的Block Manager为用户程序中要求缓存的RDD提供内存式存储。RDD 的数据是直接缓存在 Executor 进程内的，因此任务可以在运行时充分利用缓存数据加速运算。</p><h2 id="2-4-Spark任务提交过程"><a href="#2-4-Spark任务提交过程" class="headerlink" title="2.4. Spark任务提交过程"></a>2.4. Spark任务提交过程</h2><p>当用户通过SparkContext提交应用程序时，分为以下几步：</p><p>1）首先通过RpcEnv<strong>向ClusterManager注册应用并申请资源</strong>。</p><p>2）Cluster Manager根据应用的需求，将<strong>对应的Executor分配给应用程序</strong>，并在Worker上启动Executor后台进程，该进程通过RpcEnv向Driver注册Executor资源信息，Driver中的TaskScheduler保存Executor的地址、内存以及核数等信息；</p><p>3）SparkContext根据RDD的转换操作，<strong>构建RDD的血缘关系</strong>，并在遇到行动操作的时候，<strong>将构建的依赖关系提交给DAGScheduler</strong>，DAGScheduler对依赖关系进行解析，生成TaskSet，将TaskSet保存至任务池，TaskScheduler从任务池中取出TaskSet后按照FAIR或FIFO算法进行调度，给任务分配Executor资源，并将序列化后的任务发送至Executor执行。</p><h2 id="2-5-Spark性能调优"><a href="#2-5-Spark性能调优" class="headerlink" title="2.5. Spark性能调优"></a>2.5. Spark性能调优</h2><h3 id="2-5-1-参数调优"><a href="#2-5-1-参数调优" class="headerlink" title="2.5.1. 参数调优"></a>2.5.1. 参数调优</h3><h4 id="2-5-1-1-num-executors"><a href="#2-5-1-1-num-executors" class="headerlink" title="2.5.1.1. num-executors"></a>2.5.1.1. num-executors</h4><p>该参数用于设计Spark作业总的Executor进程的个数。YARN集群管理器会尽可能根据num-executor设置在工作节点上启动Executor。</p><h4 id="2-5-1-2-executor-memory"><a href="#2-5-1-2-executor-memory" class="headerlink" title="2.5.1.2. executor-memory"></a>2.5.1.2. executor-memory</h4><p>该参数用于设置每个Executor 进程的内存，Executor内存的大小，很多程度上直接决定了Spark作业的性能，而且跟很常见的Java中的虚拟机内存溢出异常(OOM)也有关系。</p><h4 id="2-5-1-3-executor-core"><a href="#2-5-1-3-executor-core" class="headerlink" title="2.5.1.3. executor-core"></a>2.5.1.3. executor-core</h4><p>该参数用于设置每个Executor进程的CPU core 数量。</p><h4 id="2-5-1-4-driver-memory"><a href="#2-5-1-4-driver-memory" class="headerlink" title="2.5.1.4. driver-memory"></a>2.5.1.4. driver-memory</h4><p>该参数用于设置Driver进程的内存，这个参数通常不设置。但是要注意的一点是，使用collect算子时，一定要保证Driver内存足够大，否则会出现内存溢出的错误。</p><h4 id="2-5-1-5-Spark-default-parallelism"><a href="#2-5-1-5-Spark-default-parallelism" class="headerlink" title="2.5.1.5. Spark.default.parallelism"></a>2.5.1.5. Spark.default.parallelism</h4><p>该参数用于设置每个Stage默认的task数量。</p><h4 id="2-5-1-6-Spark-Shuffle-memoryFraction"><a href="#2-5-1-6-Spark-Shuffle-memoryFraction" class="headerlink" title="2.5.1.6. Spark.Shuffle.memoryFraction"></a>2.5.1.6. Spark.Shuffle.memoryFraction</h4><p>该参数用于设置Shuffle过程中一个task拉取到上个Stage的task的输出后，进行聚合操作时能够使用的Executor内存的比例，默认是0.2。也就是说，Executor默认只有20%的内存用来进行该操作。shuffle操作在进行聚合时，如果发现使用的内存超出了这个20%的限制，那么多余的数据就会溢写到磁盘文件中去，此时就会极大地降低性能。建议：如果Spark作业中的RDD持久化操作较少，shuffle操作较多时，建议降低持久化操作的内存占比，提高shuffle操作的内存占比比例，避免shuffle过程中数据过多时内存不够用，必须溢写到磁盘上，降低了性能。此外，如果发现作业由于频繁的gc导致运行缓慢，意味着task执行用户代码的内存不够用，那么同样建议调低这个参数的值。</p><h3 id="2-5-2-代码重构调优"><a href="#2-5-2-代码重构调优" class="headerlink" title="2.5.2. 代码重构调优"></a>2.5.2. 代码重构调优</h3><h4 id="2-5-2-1-尽可能复用一个RDD"><a href="#2-5-2-1-尽可能复用一个RDD" class="headerlink" title="2.5.2.1. 尽可能复用一个RDD"></a>2.5.2.1. 尽可能复用一个RDD</h4><p>在对不同的数据执行算子操作时应该尽量复用一个RDD。例如，当RDD A的数据格式是key-value类型的，RDD B的数据格式是value类型的，但是这两个RDD的value数据完全相同；那么，RDD A包含了RDD B中的所有信息，理论上来说RDD B可以被替代，而实际开发中也应该尽量减少多个RDD数据有重复或者包含的情况，这样可以尽可能减少RDD的数量从而减少算子执行的次数。</p><h4 id="2-5-2-2-对多次使用的RDD进行持久化"><a href="#2-5-2-2-对多次使用的RDD进行持久化" class="headerlink" title="2.5.2.2. 对多次使用的RDD进行持久化"></a>2.5.2.2. 对多次使用的RDD进行持久化</h4><p>RDD的持有化有几种不同的级别，分别是：MEMORY_ONLY、MEMORY_AND_DISK、MEMORY_ONLY_SER、MEMORY_AND_DISK_SER、DISK_ONLY、MEMORY_ONLY_2 等，这几种持久化级别使用的优先级排序如下：</p><ol><li>MEMORY_ONLY性能最高，直接将RDD存储在内存中，省去了序列化及反序列化、从磁盘读取的时间，但是对于内存的容量有较高的要求；</li><li>MEMORY_ONLY_SER会将数据序列化后保存在内存中，通过序列化压缩了RDD的大小，但是相较于MEMORY_ONLY多出了序列化及反序列化的时间；</li><li>MEMORY_AND_DISK_SER优先将RDD缓存在内存中，内存缓存不下时才会存在磁盘中;</li><li>DISK_ONLY和后缀为_2的级别通常不建议使用，完全基于磁盘文件的读写会导致性能的极具降低；后缀为2的级别会将所有数据都复制一份副本到其他节点上，数据复制及网络传输会导致较大的性能开销。</li></ol><h4 id="2-5-2-3-尽量避免使用Shuffle算子"><a href="#2-5-2-3-尽量避免使用Shuffle算子" class="headerlink" title="2.5.2.3. 尽量避免使用Shuffle算子"></a>2.5.2.3. 尽量避免使用Shuffle算子</h4><p>Spark作业最消耗性能的部分就是Shuffle过程，应尽量避免使用Shuffle算子。Shuffle过程就是将分布在集群中多个节点上的同一个 key，拉取到同一个节点上，进行聚合或者join操作，在操作过程中可能会因为一个节点上处理的key过多导致数据溢出到磁盘。由此可见，Shuffle过程可能会发生大量的磁盘文件读写的 IO 操作，以及数据的网络传输操作。</p><p>Shuffle类算子有：<strong>distinct、groupByKey、reduceByKey、aggregateByKey、join、cogroup、repartition</strong>等，编写Spark作业程序时，<strong>应该尽量使用map类算子替代Shuffle算子</strong>。</p><h4 id="2-5-2-4-使用高性能算子"><a href="#2-5-2-4-使用高性能算子" class="headerlink" title="2.5.2.4. 使用高性能算子"></a>2.5.2.4. 使用高性能算子</h4><ol><li>使用reduceByKey/aggregateByKey替代groupByKey</li><li>使用mapPartitions替代普通map Transformation算子</li><li>使用foreachPartitions替代foreach Action算子</li><li>使用filter之后进行coalesce操作</li><li>repartition:coalesce(numPartitions，true)增多分区使用这个</li><li>coalesce(numPartitions，false)减少分区，没有shuffle只是合并partition</li></ol><h4 id="2-5-2-5-使用Kryo优化序列化性能"><a href="#2-5-2-5-使用Kryo优化序列化性能" class="headerlink" title="2.5.2.5. 使用Kryo优化序列化性能"></a>2.5.2.5. 使用Kryo优化序列化性能</h4><p>Spark支持使用Kryo序列化机制。这种序列化机制，比默认的Java序列化机制速度要快，序列化后的数据更小。所以Kryo序列化优化以后，可以让网络传输的数据变少，在集群中耗费的内存资源大大减少。</p><h4 id="2-5-2-6-优化数据结构"><a href="#2-5-2-6-优化数据结构" class="headerlink" title="2.5.2.6. 优化数据结构"></a>2.5.2.6. 优化数据结构</h4><p>在Java中有三种类型比较耗费内存</p><ul><li>对象：每个Java对象都有对象头、引用等额外的信息，因此比较占用内存空间。</li><li>字符串：每个字符串内部都有一个字符数组以及长度等额外信息。</li><li>集合类型：比如HashMap、LinkedList等，因为集合类型内部通常会使用一些内部类来封装集合元素，比如Map.Entry。</li></ul><p>因此Spark编码时应尽量不要使用以上三种数据结构，尽量使用字符串代替对象，使用原始类型（比如 Int、Long）替代字符串，使用数组替代集合类型，这样尽可能地减少内存占用，降低垃圾回收的频率提高性能。</p><h4 id="2-5-2-7-广播大变量"><a href="#2-5-2-7-广播大变量" class="headerlink" title="2.5.2.7. 广播大变量"></a>2.5.2.7. 广播大变量</h4><p>开发过程中，会遇到需要在算子函数中使用外部变量的场景(尤其是大变量，比如100M以上的大集合)，那么此时就应该使用Spark的广播(Broadcast)功能来提升性能；<strong>函数中使用到外部变量时，默认情况下，Spark会将该变量复制多个副本，通过网络传输到task中，此时每个task都有一个变量副本</strong>。如果变量本身比较大的话(比如100M，甚至1G)，那么大量的变量副本在网络中传输的性能开销，以及在各个节点的Executor中占用过多内存导致的频繁GC(垃圾回收)，都会极大地影响性能； 如果使用的外部变量比较大，建议使用Spark的广播功能，对该变量进行广播。<strong>广播后的变量，会保证每个Executor的内存中，只驻留一份变量副本，而Executor中的 task执行时共享该Executor中的那份变量副本</strong>。这样的话，可以大大减少变量副本的数量，从而减少网络传输的性能开销，并减少对Executor内存的占用开销，降低 GC的频率。</p><p><img src="https://rd.dtdream.com/download/attachments/44586449/image2023-8-1_16-8-4.png?version=1&modificationDate=1690877284000&api=v2" alt="img"></p><h1 id="3-空间大数据计算框架简介"><a href="#3-空间大数据计算框架简介" class="headerlink" title="3. 空间大数据计算框架简介"></a>3. 空间大数据计算框架简介</h1><h2 id="3-1-Sedona-GeoSpark-简介"><a href="#3-1-Sedona-GeoSpark-简介" class="headerlink" title="3.1. Sedona(GeoSpark)简介"></a>3.1. Sedona(GeoSpark)简介</h2><p><a href="https://rd.dtdream.com/pages/viewpage.action?pageId=44138042">4.1.2.3 sedona(geospark)</a></p><h2 id="3-2-扩展——SQL-MM简介"><a href="#3-2-扩展——SQL-MM简介" class="headerlink" title="3.2. 扩展——SQL/MM简介"></a>3.2. 扩展——SQL/MM简介</h2><p><a href="https://rd.dtdream.com/pages/viewpage.action?pageId=44589787">1.4.2 SQL/MM</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;大数据计算框架简介&quot;&gt;&lt;a href=&quot;#大数据计算框架简介&quot; class=&quot;headerlink&quot; title=&quot;大数据计算框架简介&quot;&gt;&lt;/a&gt;大数据计算框架简介&lt;/h1&gt;&lt;p&gt;Hadoop，Spark、Flink是目前重要的三大分布式计算系统&lt;/p&gt;
&lt;ul&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>空间关系</title>
    <link href="https://imlike.cc/3c685723.html"/>
    <id>https://imlike.cc/3c685723.html</id>
    <published>2023-11-07T11:32:52.000Z</published>
    <updated>2024-03-14T14:55:29.485Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Hole-Outside-Shell"><a href="#1-Hole-Outside-Shell" class="headerlink" title="1.Hole Outside Shell"></a>1.Hole Outside Shell</h2><p>Indicates that a hole of a polygon lies partially or completely in the exterior of the shell.</p><p><strong><img src="https://rd.dtdream.com/download/thumbnails/26605662/hole%20outside%20shell.png?version=1&modificationDate=1665470888000&api=v2" alt="img"></strong></p><h2 id="2-Nested-Holes"><a href="#2-Nested-Holes" class="headerlink" title="2.Nested Holes"></a>2.Nested Holes</h2><p>Indicates that a hole lies in the interior of another hole in the same polygon.</p><p><img src="https://rd.dtdream.com/download/attachments/26605662/nested%20holes.png?version=1&modificationDate=1665471020000&api=v2" alt="img"></p><h2 id="3-Disconnected-Interior"><a href="#3-Disconnected-Interior" class="headerlink" title="3.Disconnected Interior"></a>3.Disconnected Interior</h2><p>Indicates that the interior of a polygon is disjoint.(often caused by set of contiguous holes splitting the polygon into two parts)</p><p><img src="https://rd.dtdream.com/download/attachments/26605662/disconnected%20interior.jpg?version=1&modificationDate=1665471561000&api=v2" alt="img"></p><h2 id="4-Self-Intersection"><a href="#4-Self-Intersection" class="headerlink" title="4.Self Intersection"></a>4.Self Intersection</h2><p>Indicates that two rings of a polygonal geometry intersect.</p><p><img src="https://rd.dtdream.com/download/thumbnails/26605662/self%20intersection.png?version=1&modificationDate=1665471807000&api=v2" alt="img"></p><h2 id="5-Ring-Self-Intersection"><a href="#5-Ring-Self-Intersection" class="headerlink" title="5.Ring Self Intersection"></a>5.Ring Self Intersection</h2><p>Indicates that a ring self-intersects.</p><p><img src="https://rd.dtdream.com/download/thumbnails/26605662/self-intersects.png?version=1&modificationDate=1665472261000&api=v2" alt="img"><img src="https://rd.dtdream.com/download/thumbnails/26605662/ring%20self%20intersection.png?version=1&modificationDate=1665472213000&api=v2" alt="img"></p><h2 id="6-Nested-Shells"><a href="#6-Nested-Shells" class="headerlink" title="6.Nested Shells"></a>6.Nested Shells</h2><p>Indicates that a polygon component of a MultiPolygon lies inside another polygonal component.</p><p><img src="https://rd.dtdream.com/download/thumbnails/26605662/nested%20shells.jpg?version=1&modificationDate=1665472572000&api=v2" alt="img"></p><h2 id="7-Duplicate-Rings"><a href="#7-Duplicate-Rings" class="headerlink" title="7.Duplicate Rings"></a>7.Duplicate Rings</h2><p>Indicates that a polygonal geometry contains two rings which are identical.</p><p>也就是说，多边形中包含了两个相同的环，此处不加图片示意了。</p><h2 id="8-Too-Few-Points"><a href="#8-Too-Few-Points" class="headerlink" title="8.Too Few Points"></a>8.Too Few Points</h2><p>Indicates that either:<br>1)A LineString contains a single point;<br>2)A LinearRing contains 2 or 3 points.</p><p>即组成形状的节点太少了。此处不加图片示意了。</p><h2 id="9-invalid-coordinate"><a href="#9-invalid-coordinate" class="headerlink" title="9.invalid coordinate"></a>9.invalid coordinate</h2><p>Indicates that the X or Y ordinate of a Coordinate is not a valid numeric value.</p><p>即不合法的坐标。</p><p>比如说，在地理坐标系中，经度的范围为[-180, 180]，纬度的范围为[-90, 90]，超出这个范围的坐标即为invalid coordinate。此处不加图片示意了。</p><h2 id="10-Ring-Not-Closed"><a href="#10-Ring-Not-Closed" class="headerlink" title="10.Ring Not Closed"></a>10.Ring Not Closed</h2><p><em>Indicates that a ring is not correctly closed.(the first and the last coordinate are different)</em></p><p>即多边形没有合上。正确的polygon应该是首尾相连的，若不相连即出现此错误。此处不加图片示意了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Hole-Outside-Shell&quot;&gt;&lt;a href=&quot;#1-Hole-Outside-Shell&quot; class=&quot;headerlink&quot; title=&quot;1.Hole Outside Shell&quot;&gt;&lt;/a&gt;1.Hole Outside Shell&lt;/h2&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2023最新jd_cookie在青龙上操作</title>
    <link href="https://imlike.cc/d3bcc396.html"/>
    <id>https://imlike.cc/d3bcc396.html</id>
    <published>2023-11-02T12:49:07.000Z</published>
    <updated>2024-03-14T14:55:29.478Z</updated>
    
    <content type="html"><![CDATA[<p>安装docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#安装docker</span><br><span class="line">sudo yum check-update</span><br><span class="line">curl -sSL https:&#x2F;&#x2F;get.daocloud.io&#x2F;docker | sh</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl status docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><p>如果已经安装docker 删除qinglong的镜像和服务 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -a -q) &#x2F;&#x2F;  stop停止所有容器 </span><br><span class="line">docker rm $(docker ps -a -q) &#x2F;&#x2F;   remove删除所有容器</span><br></pre></td></tr></table></figure><h3 id="安装qinglong"><a href="#安装qinglong" class="headerlink" title="安装qinglong"></a>安装qinglong</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker  run -dit \</span><br><span class="line">  -v $PWD&#x2F;ql:&#x2F;ql&#x2F;data  \</span><br><span class="line">  -p 5700:5700 \</span><br><span class="line">  -p 5701:5701 \</span><br><span class="line">  -e ENABLE_WEB_PANEL&#x3D;true \</span><br><span class="line">  -e ENABLE_HANGUP&#x3D;true \</span><br><span class="line">  -e QlPort&#x3D;&quot;5700&quot; \</span><br><span class="line">  --name qinglong \</span><br><span class="line">  --hostname qinglong \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  whyour&#x2F;qinglong:latest</span><br></pre></td></tr></table></figure><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## ql为容器名 本文机器容器名为qinglong</span><br><span class="line">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure><h3 id="安装ninja插件"><a href="#安装ninja插件" class="headerlink" title="安装ninja插件"></a>安装ninja插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;gh-proxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;shufflewzc&#x2F;Waikiki_ninja.git  &#x2F;ql&#x2F;ninja</span><br><span class="line">cd &#x2F;ql&#x2F;ninja&#x2F;backend</span><br><span class="line">pnpm install</span><br><span class="line">pm2 start</span><br></pre></td></tr></table></figure><h3 id="打开青龙configs文件夹的extra-sh文件"><a href="#打开青龙configs文件夹的extra-sh文件" class="headerlink" title="打开青龙configs文件夹的extra.sh文件"></a>打开青龙configs文件夹的extra.sh文件</h3><p>将以下内容粘贴进去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;ql&#x2F;ninja&#x2F;backend </span><br><span class="line">pm2 start</span><br></pre></td></tr></table></figure><h3 id="安装签到脚本"><a href="#安装签到脚本" class="headerlink" title="安装签到脚本"></a>安装签到脚本</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;shufflewzc&#x2F;faker3.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot; &quot;main&quot;    # fake2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;6dylan6&#x2F;jdpro   # 6dy</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;leafTheFish&#x2F;DeathNote</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>重启后务必执行一次 <code>ql extra</code> 保证 Ninja 配置成功。</li><li>更新 Ninja 只需要在容器中 <code>ninja/backend</code> 目录执行 <code>git pull</code> 然后 <code>pm2 start</code></li><li>Qinglong 需要在登录状态（<code>auth.json</code> 中有 token）</li></ul><h2 id="获取cookie"><a href="#获取cookie" class="headerlink" title="获取cookie"></a>获取cookie</h2><p>以前大家都是获取jd的cookie来操作现在 cookie非常容易过期,现在推荐使用 <strong>wskey</strong>,需要在移动客户端抓包,下面介绍使用安卓客户端的操作,先安装</p><ol><li><p> app：VNET（抓包用）、京东；</p></li><li><p><strong>VNET抓包wskey:</strong></p></li><li><p><strong>青龙面板使用wskey转换脚本</strong></p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ql repo https:&#x2F;&#x2F;e.coding.net&#x2F;HelloDNS&#x2F;sign&#x2F;wskey.git &quot;wskey&quot;  # 国内外</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安装青龙的依赖"><a href="#安装青龙的依赖" class="headerlink" title="安装青龙的依赖"></a>安装青龙的依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https:&#x2F;&#x2F;gh-proxy.com&#x2F;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;FlechazoPh&#x2F;QLDependency&#x2F;main&#x2F;Shell&#x2F;QLOneKeyDependency.sh | sh</span><br></pre></td></tr></table></figure><p>设置环境变量 QL_LOG_AUTO_INSTALL_DEPEND=ture</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>参考链接</p><p><a href="https://thin-hill-428.notion.site/Faker-1c598629675145988b43a37998a1604a">青龙Faker仓库教程合集</a></p><p><a href="https://blog.csdn.net/yekui6254/article/details/121511771">安卓抓取JD wskey + 添加脚本自动转换JD cookie_jd_wsck-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装docker&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span</summary>
      
    
    
    
    
  </entry>
  
</feed>
